#	Example:
#	Example:
# 
#	example_effect = {
#		treasury = 100
#		add_adm_power = 50
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#


set_correct_dynasty = {
	if = { limit = { tag = A01 } define_heir = { dynasty = "Wrynn" claim = 75 no_consort_with_heir = yes } } 
	if = { limit = { tag = A28 } define_heir = { dynasty = "Bronzebeard" claim = 75 no_consort_with_heir = yes } } 
	if = { limit = { tag = A90 } define_heir = { dynasty = "Sunstrider" claim = 75 no_consort_with_heir = yes } } 
	if = { limit = { tag = A91 } define_heir = { dynasty = "Sunstrider" claim = 75 no_consort_with_heir = yes } } 
}

#$against$, $num_of_provinces$, $army_size$, $is_coastal$
send_invasion_force = {
	$against$ = {
		random_owned_province = {
			limit = { 
				NOT = { has_province_flag = was_invaded_by_forces_of@ROOT } 
				[[is_coastal] has_port = $is_coastal$ ]
			}
			set_province_flag = was_invaded_by_forces_of@ROOT
			set_variable = {
				which = army_size_counter
				value = 0
			}
			log = "Invading province 1..." # shows up in log.
			while = {
				limit = {
					NOT = { check_variable = {
						which = army_size_counter
						value = $army_size$
					} }
				}
				log = "Invading province 2..." # Doesn't show up in log.
				change_variable = {
					which = army_size_counter
					value = 1
				}
				infantry = ROOT
			}
			set_variable = {
				which = army_size_counter
				value = 0
			}
		}
		set_variable = {
			which = num_of_provinces_counter
			value = 1
		}
		while = {
			limit = {
				NOT = { check_variable = {
					which = num_of_provinces_counter
					value = $num_of_provinces$
				} }
			}
			change_variable = {
				which = num_of_provinces_counter
				value = 1
			}
			random_owned_province = {
				limit = {
					any_neighbor_province = { has_province_flag = was_invaded_by_forces_of@ROOT }
					[[is_coastal] has_port = $is_coastal$ ]
				}
				set_province_flag = was_invaded_by_forces_of@ROOT
				set_variable = {
					which = army_size_counter
					value = 0
				}
				log = "Invading province..." # Doesn't show up in log.
				while = {
					limit = {
						NOT = { check_variable = {
							which = army_size_counter
							value = $army_size$
						} }
					}
					change_variable = {
						which = army_size_counter
						value = 1
					}
					infantry = ROOT
				}
				set_variable = {
					which = army_size_counter
					value = 0
				}
			}
		}
		set_variable = {
			which = num_of_provinces_counter
			value = 0
		}
		every_owned_province = {
			clr_province_flag = was_invaded_by_forces_of@ROOT
		}
	}
}

form_holy_order_effect = {
	hidden_effect = { add_local_autonomy = 10 }
	custom_tooltip = ADD_AUTONOMY_TOOLTIP
	add_base_tax = 1
	add_base_production = 1
	add_base_manpower = 1
}
abandon_holy_order_effect = {
	hidden_effect = { add_local_autonomy = -10 }
	custom_tooltip = SUB_AUTONOMY_TOOLTIP
	add_base_tax = -1
	add_base_production = -1
	add_base_manpower = -1
	add_unrest = 2
}

discover_home_continent = {
	every_province = {
		discover_country = ROOT
	}
}

opinions_joined_alliance = {
    every_country = {
        limit = {
            has_country_modifier = alliance_member
            NOT = { has_opinion_modifier = { who = ROOT modifier = alliance_alliance } }
        }
        add_opinion = { who = ROOT modifier = alliance_alliance }
    }
    every_country = {
        limit = {
            has_country_modifier = horde_member
            NOT = { has_opinion_modifier = { who = ROOT modifier = alliance_horde } }
        }
        add_opinion = { who = ROOT modifier = alliance_horde }
    }
}

opinions_joined_horde = {
            every_country = {
                limit = {
                    has_country_modifier = alliance_member
                    NOT = { has_opinion_modifier = { who = ROOT modifier = horde_alliance } }
                }
                add_opinion = { who = ROOT modifier = horde_alliance }
            }
            every_country = {
                limit = {
                    has_country_modifier = horde_member
                    NOT = { has_opinion_modifier = { who = ROOT modifier = horde_horde } }
                }
                add_opinion = { who = ROOT modifier = horde_horde }
            }
}

opinions_left_alliance = {
            every_country = {
                limit = {
                    has_country_modifier = alliance_member
                    has_opinion_modifier = { who = ROOT modifier = alliance_alliance }
                }
                remove_opinion = { who = ROOT modifier = alliance_alliance }
            }
            every_country = {
                limit = {
                    has_country_modifier = alliance_member
                    reverse_has_opinion_modifier = { who = ROOT modifier = alliance_alliance }
                }
                reverse_remove_opinion = { who = ROOT modifier = alliance_alliance }
            }
            every_country = {
                limit = {
                    has_country_modifier = horde_member
                    has_opinion_modifier = { who = ROOT modifier = alliance_horde }
                }
                remove_opinion = { who = ROOT modifier = alliance_horde }
            }
            every_country = {
                limit = {
                    has_country_modifier = horde_member
                    reverse_has_opinion_modifier = { who = ROOT modifier = alliance_horde }
                }
                reverse_remove_opinion = { who = ROOT modifier = alliance_horde }
            }
}

opinions_left_horde = {
            every_country = {
                limit = {
                    has_country_modifier = alliance_member
                    has_opinion_modifier = { who = ROOT modifier = horde_alliance }
                }
                remove_opinion = { who = ROOT modifier = horde_alliance }
            }
            every_country = {
                limit = {
                    has_country_modifier = alliance_member
                    reverse_has_opinion_modifier = { who = ROOT modifier = horde_alliance }
                }
                reverse_remove_opinion = { who = ROOT modifier = horde_alliance }
            }
            every_country = {
                limit = {
                    has_country_modifier = horde_member
                    has_opinion_modifier = { who = ROOT modifier = horde_horde }
                }
                remove_opinion = { who = ROOT modifier = horde_horde }
            }
            every_country = {
                limit = {
                    has_country_modifier = horde_member
                    reverse_has_opinion_modifier = { who = ROOT modifier = horde_horde }
                }
                reverse_remove_opinion = { who = ROOT modifier = horde_horde }
            }
}

## ALLIANCE - HORDE FACTIONS
# These effects are used on_startup at on_actions file. Triggers used are set in scripted_triggers which lets game know which nations are Alliance, Horde and their respective leaders by age.
set_faction_conflict = {
	if = {
		limit = {
			historical_conflict_times = yes
		}
		#First leaders join
		
		#Then rest follows
		every_country = {
			limit = {
				historical_alliance = yes
			}
			random_country = {
				limit = { historical_alliance_head = yes }
				add_country_modifier = { 
					name = alliance_head
					duration = -1
				}
				create_subject = {
					subject_type = faction_alliance
					subject = PREV
				}
			}
		}
		every_country = {
			limit = {
				historical_horde = yes
			}
			random_country = {
				limit = { historical_horde_head = yes }
				add_country_modifier = { 
					name = horde_head
					duration = -1
				}
				create_subject = {
					subject_type = faction_horde
					subject = PREV
				}
			}
		}
		
	}
}