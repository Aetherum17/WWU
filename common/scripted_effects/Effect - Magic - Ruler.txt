#-----------------------------------
# On Actions
#-----------------------------------
# ROOT = Countr
on_startup__magic = {
    reset_magical_study = yes
}

# ROOT = Countr
on_country_creation__magic = { 
    reset_magical_study = yes
}

# ROOT = Country
on_monarch_death__magic = {
    reset_magical_study = yes
}


# ROOT = Country
on_monthly_pulse__magic = {
    # Make ruler a spellcaster if they have reached 100% study progress
    if = {
        limit = {
            has_ruler_modifier = magical_training
            check_variable = {
                which = magical_study_progress
                value = 100.0
            }
        }
        
        complete_magical_study = yes
        reset_magical_study = yes
        add_ruler_spellcasting = yes
    }
    
    # Increment ruler study progress
    if = {
        limit = {
            has_ruler_modifier = magical_training
            NOT = {
                check_variable = {
                    which = magical_study_progress
                    value = 100.0
                }
            }
        }
        
        random_list = {
            30 = { change_variable = { which = magical_study_progress value = 0.1 } }
            30 = { change_variable = { which = magical_study_progress value = 0.2 } }
            30 = { change_variable = { which = magical_study_progress value = 0.3 } }
            20 = { change_variable = { which = magical_study_progress value = 0.4 } }
            20 = { change_variable = { which = magical_study_progress value = 0.5 } }
            20 = { change_variable = { which = magical_study_progress value = 0.6 } }
            10 = { change_variable = { which = magical_study_progress value = 0.7 } }
            10 = { change_variable = { which = magical_study_progress value = 0.8 } }
            5 = { change_variable = { which = magical_study_progress value = 0.9 } }
            5 = { change_variable = { which = magical_study_progress value = 1.0 } }
        }
        
        set_country_flag = magical_study_progress_var_exists
        
        # Cap at 100
        if = {
            limit = {
                check_variable = {
                    which = magical_study_progress
                    value = 100.0
                }
            }
            
            set_variable = {
                which = magical_study_progress
                value = 100.0
            }
        }
    }
    
    # Mana Regeneration
    if = {
        limit = {
            has_ruler_modifier = spellcaster_capabilities
        }
        
        # Idea Regeneration
        if = {
            limit = {
                OR = {
                    has_idea = dalaran_ideas_3
                    has_idea = blue_dragonflight_ideas_7
                    has_idea = tortollan_ideas_5
                    has_idea = karazhan_ideas_7
                    has_estate_privilege = estate_dragonflight_creatures_of_magic
                }
            }
            
            set_variable = {
                which = mana_chance
                value = 10
            }
            
            random_list = {
                90 = { }
                10 = { add_mana_1 = yes }
            }
        }
        # Default
        else = {
            set_variable = {
                which = mana_chance
                value = 5
            }
    
            random_list = {
                95 = { }
                5 = { add_mana_1 = yes }
            }
        }
    }
    
    # Polymorph
    if = {
        limit = {
            has_country_flag = polymorph_active
            OR = {
                NOT = {
                    check_variable = {
                        which = polymorph_count
                        value = 1
                    }
                }
                NOT = {
                    any_owned_province = {
                        OR = {
                            NOT = { culture = ROOT }
                            NOT = { religion = ROOT }
                        }
                    }
                }
            }
        }
        
        clr_country_flag = polymorph_active
    }
}

# ROOT = Country
on_yearly_pulse__magic = {
    # 
}

# ROOT = Country
on_new_monarch__magic = {
    reset_spellcaster_skills = yes
    
    # Jaina
    if = {
        limit = {
            has_ruler = "Jaina"
            dynasty = "Proudmoore"
            has_global_flag = jaina_in_dalaran
        }
        
        add_ruler_spellcasting = yes
        set_variable = {
            which = ruler_magic_aptitude
            value = 1
        }
        set_variable = {
            which = ruler_magic_finesse
            value = 1
        }
        set_variable = {
            which = ruler_magic_concentration
            value = 1
        }
    }
    
    # Add the Spellcaster mechanic automatically for these monarchs
    if = {
        limit = {
            OR = {
                has_government_attribute = enables_automatic_spellcasting_ruler
                has_government_attribute = enables_automatic_spellcasting_ruler_strong
            }
        }
        
        add_ruler_spellcasting = yes
        set_variable = {
            which = ruler_magic_aptitude
            value = 1
        }
        set_variable = {
            which = ruler_magic_finesse
            value = 1
        }
        set_variable = {
            which = ruler_magic_concentration
            value = 1
        }
        
        # Adjustment: for countries that would have more powerful spellcasters by default
        if = {
            limit = {
                has_government_attribute = enables_automatic_spellcasting_ruler_strong
            }
            set_variable = {
                which = ruler_magic_aptitude
                value = 2
            }
            set_variable = {
                which = ruler_magic_finesse
                value = 2
            }
            set_variable = {
                which = ruler_magic_concentration
                value = 2
            }
        }
    }
}

