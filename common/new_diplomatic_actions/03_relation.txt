#---------------------------------------
# Manage Vassal
#---------------------------------------
manage_vassal = {
	category = relation
	alert_index = 3
	alert_tooltip = manage_vassal_tooltip
	
	require_acceptance = no
	
	is_visible = {
        FROM = { 
            is_subject_of = ROOT
            OR = {
                is_subject_of_type = vassal
                is_subject_of_type = march
                is_subject_of_type = client_march
                is_subject_of_type = client_vassal
                is_subject_of_type = tributary_vassal
                is_subject_of_type = demonic_vassal
                is_subject_of_type = scourge_vassal
                is_subject_of_type = colony
                is_subject_of_type = crown_colony
                is_subject_of_type = private_enterprise
                is_subject_of_type = self_governing_colony
                is_subject_of_type = subjugated_vassal
            }
        }
	}
    
	is_allowed = {
        always = yes
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - manage_vassal"
            }
        }
        
        hidden_effect = {
            FROM = {
				# Audax Validator "." Ignore_NEXT
                save_event_target_as = current_subject
            }
        }
        country_event = { id = wwu_subject_management.1 }
	}
    
	on_decline = {
        
	}
	
	ai_acceptance = {
        
	}
	ai_will_do = {
        always = no
	}
}

#---------------------------------------
# Integrate Subject
#---------------------------------------
integrate_subject = {
	category = relation
	alert_index = 3
	alert_tooltip = integrate_subject_tooltip
	
	require_acceptance = no
	
	is_visible = {
        FROM = {    
            NOT = { has_country_modifier = subject_annexation_started__subject }
            is_subject_of = ROOT
            
            # These are the new subjects that this systems adds integration for.
            OR = {
                is_subject_of_type = demonic_vassal
                is_subject_of_type = scourge_vassal
            }
        }
	}
    
	is_allowed = {
        NOT = { has_country_modifier = subject_annexation_started__overlord }
        FROM = {
            has_opinion = {
                who = ROOT
                value = 180
            }
            NOT = { liberty_desire = 50 }
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - integrate_subject"
            }
        }
        
        hidden_effect = {
            FROM = {
                add_country_modifier = {
                    name = subject_annexation_started__subject
                    duration = -1
                }
                
                set_variable = {
                    which = integration_progress
                    value = 0
                }
                export_to_variable = {
                    which = integration_goal
                    value = trigger_value:total_development
                }
            }
            
            add_country_modifier = {
                name = subject_annexation_started__overlord
                duration = -1
            }
        }
	}
    
	on_decline = {
        
	}
	
	ai_acceptance = {
        
	}
	ai_will_do = {
        always = no # AI won't use this for now
	}
}

#---------------------------------------
# View Integration Progress
#---------------------------------------
view_subject_integration = {
	category = relation
	alert_index = 3
	alert_tooltip = view_subject_integration_tooltip
	
	require_acceptance = no
	
	is_visible = {
        FROM = { 
            has_country_modifier = subject_annexation_started__subject
        }
	}
    
	is_allowed = {
        always = yes
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - view_subject_integration"
            }
        }
        
        hidden_effect = {
            FROM = {
				# Audax Validator "." Ignore_NEXT
                save_event_target_as = current_subject
            }
        }
        country_event = { id = wwu_subject_annexation.10 }
	}
    
	on_decline = {
        
	}
	
	ai_acceptance = {
        
	}
	ai_will_do = {
        always = no # AI won't use this for now
	}
}

#---------------------------------------
# Abandon Subject
#---------------------------------------
abandon_subject = {
	category = relation
	alert_index = 3
	alert_tooltip = abandon_subject_tooltip
	
	require_acceptance = no
	
	is_visible = {
        overlord_of = FROM
        FROM = {
            is_subject_of = ROOT
            
            # Already covered by vanilla actions
            NOT = { is_subject_of_type = vassal }
            NOT = { is_subject_of_type = march }
            NOT = { is_subject_of_type = personal_union }
            NOT = { is_subject_of_type = client_vassal }
            NOT = { is_subject_of_type = client_march }
            NOT = { is_subject_of_type = tributary_state }
        }
	}
    
	is_allowed = {
        overlord_of = FROM
        FROM = {
            is_subject_of = ROOT
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - abandon_subject"
            }
        }
        
        FROM = {
            grant_independence = yes
        }
	}
	on_decline = {
        
	}
	
	ai_acceptance = {
        add_entry = {
			name = BASE
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}
	ai_will_do = {
        # AI will use it for tributary-type subjects that are disliked
        # Below -150 opinion
		NOT = {
			has_opinion = {
				who = FROM
				value = -150
			}
		}
		FROM = {
			is_subject_of_type = tributary_state
		}
	}
}

control_subject = {
	category = relation
	alert_index = 3
	alert_tooltip = control_subject_tooltip
	
	require_acceptance = no
	
	is_visible = {
        ai = no
        FROM = {
            is_subject_of = ROOT
        }
	}
    
	is_allowed = {
        ai = no
        FROM = {
            is_subject_of = ROOT
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - control_subject"
            }
        }
        
        switch_tag = FROM
	}
	on_decline = {
        switch_tag = FROM
	}
	
	ai_acceptance = {
        add_entry = {
			name = BASE
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}
	ai_will_do = {
        always = no
	}
}
return_to_overlord = {
	category = relation
	alert_index = 3
	alert_tooltip = return_to_overlord_tooltip
	
	require_acceptance = no
	
	is_visible = {
        ai = no
        FROM = {
            overlord_of = ROOT
        }
	}
    
	is_allowed = {
        ai = no
        FROM = {
            overlord_of = ROOT
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - return_to_overlord"
            }
        }
        
        switch_tag = FROM
	}
	on_decline = {
        switch_tag = FROM
	}
	
	ai_acceptance = {
        add_entry = {
			name = BASE
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}
	ai_will_do = {
        always = no
	}
}

#---------------------------------------
# Orcish Horde
#---------------------------------------
control_orcish_horde = {
	category = relation
	alert_index = 3
	alert_tooltip = control_orcish_horde_tooltip
	
	require_acceptance = no
	
	is_visible = {
        has_reform = orc_clan_reform
        ai = no
        FROM = {
            OR = {
                tag = U03
                has_country_flag = orcish_horde_primary_nation
            }
        }
	}
    
	is_allowed = {
        has_reform = orc_clan_reform
        ai = no
        FROM = {
            OR = {
                tag = U03
                has_country_flag = orcish_horde_primary_nation
            }
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - control_orcish_horde"
            }
        }
        
        hidden_effect = { set_country_flag = original_orc_clan }
        switch_tag = FROM
	}
	on_decline = {
        hidden_effect = { set_country_flag = original_orc_clan }
        switch_tag = FROM
	}
	
	ai_acceptance = {
        add_entry = {
			name = BASE
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}
	ai_will_do = {
        always = no
	}
}
return_to_clan = {
	category = relation
	alert_index = 3
	alert_tooltip = return_to_clan_tooltip
	
	require_acceptance = no
	
	is_visible = {
        ai = no
        tag = U03
        FROM = {
            has_country_flag = original_orc_clan
        }
	}
    
	is_allowed = {
        ai = no
        tag = U03
        FROM = {
            has_country_flag = original_orc_clan
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - return_to_clan"
            }
        }
        
        switch_tag = FROM
	}
	on_decline = {
        switch_tag = FROM
	}
	
	ai_acceptance = {
        add_entry = {
			name = BASE
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}
	ai_will_do = {
        always = no
	}
}

# For Orcish Horde presence only
establish_azeroth_clan = {
	category = relation
	alert_index = 3
	alert_tooltip = establish_azeroth_clan_tooltip
	
	require_acceptance = no
	
	is_visible = {
        NOT = { has_country_flag = established_azeroth_clan }
        ai = no
        has_reform = orc_clan_reform
        FROM = {
            tag = U03
        }
	}
    
	is_allowed = {
        ai = no
        has_reform = orc_clan_reform

        U03 = {
            OR = {
                area_serpents_coil = {
                    owned_by = U03
                }
                area_the_blasted_land = {
                    owned_by = U03
                }
                area_the_tainted_land = {
                    owned_by = U03
                }
                area_the_red_reaches = {
                    owned_by = U03
                }
                area_the_shattered_landing = {
                    owned_by = U03
                }
                area_stonard = {
                    owned_by = U03
                }
                area_splinterspear_bog = {
                    owned_by = U03
                }
                area_swamps_of_sorrow = {
                    owned_by = U03
                }
                area_sorrowmurk = {
                    owned_by = U03
                }
                area_crackling_banks = {
                    owned_by = U03
                }
                area_stagalbog = {
                    owned_by = U03
                }
                area_misty_reed = {
                    owned_by = U03
                }
                area_deadwind_pass = {
                    owned_by = U03
                }
            }
        }
        
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - establish_azeroth_clan"
            }
        }
        
        country_event = { id = wwu_orcish_horde.2 days = 7 }
	}
	on_decline = {
        country_event = { id = wwu_orcish_horde.2 days = 7 }
	}
	
	ai_acceptance = {
        add_entry = {
			name = BASE
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}
	ai_will_do = {
        always = no
	}
}

# Bequeath Gold
bequeath_gold = {
	category = relation
	alert_index = 3
	alert_tooltip = bequeath_gold_tooltip
	
	require_acceptance = no
	
	is_visible = {
        OR = {
            AND = {
                has_country_modifier = head_of_alliance
                FROM = {
                    has_country_modifier = member_of_alliance
                }
            }
            AND = {
                has_country_modifier = head_of_horde
                FROM = {
                    has_country_modifier = member_of_horde
                }
            }
            AND = {
                has_country_modifier = head_of_trade_coalition
                FROM = {
                    has_country_modifier = member_of_trade_coalition
                }
            }
            AND = {
                has_country_modifier = head_of_dragon_aspects
                FROM = {
                    has_country_modifier = member_of_dragon_aspects
                }
            }
        }
	}
    
	is_allowed = {
        treasury = 100
        NOT = {
            has_country_modifier = faction_gold_boost_cooldown
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - bequeath_gold"
            }
        }
        
        add_treasury = -100
        
        hidden_effect = {
            add_country_modifier = {
                name = faction_gold_boost_cooldown
                duration = 365
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_alliance_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_alliance_mechanic
                power_type = faction_authority_alliance
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_horde_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_horde_mechanic
                power_type = faction_authority_horde
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_old_horde_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_old_horde_mechanic
                power_type = faction_authority_old_horde
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_trade_coalition_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_trade_coalition_mechanic
                power_type = faction_authority_trade_coalition
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_dragon_aspects_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_dragon_aspects_mechanic
                power_type = faction_authority_dragon_aspects
                value = 10
            }
        }
        
        FROM = {
            add_treasury = 100
        }
	}
	on_decline = { }
	
	ai_acceptance = {
        add_entry = {
			name = BASE
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}
	ai_will_do = {
        always = no
	}
}

# Bequeath Sailors
bequeath_sailors = {
	category = relation
	alert_index = 3
	alert_tooltip = bequeath_sailors_tooltip
	
	require_acceptance = no
	
	is_visible = {
        OR = {
            AND = {
                has_country_modifier = head_of_alliance
                FROM = {
                    has_country_modifier = member_of_alliance
                }
            }
            AND = {
                has_country_modifier = head_of_horde
                FROM = {
                    has_country_modifier = member_of_horde
                }
            }
            AND = {
                has_country_modifier = head_of_trade_coalition
                FROM = {
                    has_country_modifier = member_of_trade_coalition
                }
            }
            AND = {
                has_country_modifier = head_of_dragon_aspects
                FROM = {
                    has_country_modifier = member_of_dragon_aspects
                }
            }
        }
        
        FROM = {
            any_owned_province = {
                has_port = yes
            }
        }
	}
    
	is_allowed = {
        sailors = 1000
        NOT = {
            has_country_modifier = faction_sailor_boost_cooldown
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - bequeath_sailors"
            }
        }
        
        add_sailors = -1000
        
        hidden_effect = {
            add_country_modifier = {
                name = faction_sailor_boost_cooldown
                duration = 365
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_alliance_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_alliance_mechanic
                power_type = faction_authority_alliance
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_horde_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_horde_mechanic
                power_type = faction_authority_horde
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_old_horde_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_old_horde_mechanic
                power_type = faction_authority_old_horde
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_trade_coalition_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_trade_coalition_mechanic
                power_type = faction_authority_trade_coalition
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_dragon_aspects_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_dragon_aspects_mechanic
                power_type = faction_authority_dragon_aspects
                value = 10
            }
        }
        
        FROM = {
            add_sailors = 1000
        }
	}
	on_decline = { }
	
	ai_acceptance = {
        add_entry = {
			name = BASE
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}
	ai_will_do = {
        always = no
	}
}

# Bequeath Soldiers
bequeath_soliders = {
	category = relation
	alert_index = 3
	alert_tooltip = bequeath_soliders_tooltip
	
	require_acceptance = no
	
	is_visible = {
        OR = {
            AND = {
                has_country_modifier = head_of_alliance
                FROM = {
                    has_country_modifier = member_of_alliance
                }
            }
            AND = {
                has_country_modifier = head_of_horde
                FROM = {
                    has_country_modifier = member_of_horde
                }
            }
            AND = {
                has_country_modifier = head_of_trade_coalition
                FROM = {
                    has_country_modifier = member_of_trade_coalition
                }
            }
            AND = {
                has_country_modifier = head_of_dragon_aspects
                FROM = {
                    has_country_modifier = member_of_dragon_aspects
                }
            }
        }
	}
    
	is_allowed = {
        manpower = 5
        NOT = {
            has_country_modifier = faction_manpower_boost_cooldown
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - bequeath_soliders"
            }
        }
        
        add_manpower = -5
        
        hidden_effect = {
            add_country_modifier = {
                name = faction_manpower_boost_cooldown
                duration = 365
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_alliance_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_alliance_mechanic
                power_type = faction_authority_alliance
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_horde_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_horde_mechanic
                power_type = faction_authority_horde
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_old_horde_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_old_horde_mechanic
                power_type = faction_authority_old_horde
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_trade_coalition_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_trade_coalition_mechanic
                power_type = faction_authority_trade_coalition
                value = 10
            }
        }
        
        if = {
            limit = {
                has_government_mechanic = faction_authority_dragon_aspects_mechanic
            }
            
            add_government_power = {
                mechanic_type = faction_authority_dragon_aspects_mechanic
                power_type = faction_authority_dragon_aspects
                value = 10
            }
        }
        
        FROM = {
            add_manpower = 5
        }
	}
	on_decline = { }
	
	ai_acceptance = {
        add_entry = {
			name = BASE
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}
	ai_will_do = {
        always = no
	}
}

#---------------------------------------
# Bolster Draconic Ties
#---------------------------------------
bolster_draconic_ties = {
	category = relation
	
	alert_index = 3
	alert_tooltip = bolster_draconic_ties_tooltip
	require_acceptance = yes
    
	is_visible = {
        culture_group = culture_group_dragonkin
        FROM = { culture_group = culture_group_dragonkin }
        
        NOT = { has_country_modifier = cooldown_draconic_ties }
        NOT = { has_country_modifier = enforced_isolation }
            
        FROM = { 
            NOT = { has_country_modifier = enforced_isolation }
            NOT = { is_subject_of = ROOT }
            NOT = {
                has_opinion_modifier = {
                    who = ROOT
                    modifier = draconic_ties
                }
            }
        }
	}
	is_allowed = {
        FROM = { 
            NOT = { is_subject_of = ROOT }
            NOT = {
                has_opinion_modifier = {
                    who = ROOT
                    modifier = draconic_ties
                }
            }
        }
        if = {
            limit = {
                DIP = 7
            }
            dip_power = 20
        }
        else_if = {
            limit = {
                DIP = 6
            }
            dip_power = 40
        }
        else_if = {
            limit = {
                DIP = 5
            }
            dip_power = 60
        }
        else_if = {
            limit = {
                DIP = 4
            }
            dip_power = 80
        }
        else_if = {
            limit = {
                DIP = 3
            }
            dip_power = 100
        }
        else_if = {
            limit = {
                DIP = 2
            }
            dip_power = 120
        }
        else_if = {
            limit = {
                DIP = 1
            }
            dip_power = 140
        }
        else = {
            dip_power = 150
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - bolster_draconic_ties - accepted"
            }
        }
        
        if = {
            limit = {
                DIP = 7
            }
            add_dip_power = -20
        }
        else_if = {
            limit = {
                DIP = 6
            }
            add_dip_power = -40
        }
        else_if = {
            limit = {
                DIP = 5
            }
            add_dip_power = -60
        }
        else_if = {
            limit = {
                DIP = 4
            }
            add_dip_power = -80
        }
        else_if = {
            limit = {
                DIP = 3
            }
            add_dip_power = -100
        }
        else_if = {
            limit = {
                DIP = 2
            }
            add_dip_power = -120
        }
        else_if = {
            limit = {
                DIP = 1
            }
            add_dip_power = -140
        }
        else = {
            add_dip_power = -150
        }
        
        add_opinion = {
            who = FROM
            modifier = draconic_ties
        }
        
        FROM = {
            add_opinion = {
                who = ROOT
                modifier = draconic_ties
            }
        }
        
        if = {
            limit = {
                ai = yes
            }
            
            add_country_modifier = {
                name = cooldown_draconic_ties
                duration = 1825
            }
        }
	}
	on_decline = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - bolster_draconic_ties - declined"
            }
        }
        
        add_prestige = -5
        
        if = {
            limit = {
                ai = yes
            }
            
            add_country_modifier = {
                name = cooldown_draconic_ties
                duration = 1825
            }
        }
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			subtract_variable = { which = ai_value value = 25 }
		}
        add_entry = {
			name = INV_SAME_CULTURE_GROUP
			limit = {
				culture_group = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = 50
			}
		}
        add_entry = {
			name = INV_ACCEPTED_CULTURE
			limit = {
				accepted_culture = FROM
			}
			export_to_variable = {
				variable_name = ai_value
				value = 30
			}
		}
	}

	ai_will_do = {
        # Only diplomatic AI should do this
        DIP = 4
        dip_power = 300
        
        OR = {
            personality = ai_diplomat
            personality = ai_balanced
        }
	}
}