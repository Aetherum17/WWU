has_class_study_window_open = {
    has_country_flag = gui_flag__class_study_gui_open
}

has_class_abilities_window_open = {
    has_country_flag = gui_flag__class_abilities_gui_open
}

has_not_completed_class_study = {
    NOT = {
        check_variable = {
            which = class_study_progress
            value = 100.0
        }
    }
}

has_completed_class_study = {
    check_variable = {
        which = class_study_progress
        value = 100.0
    }
}

has_class_study_cost = {
    if = {
        limit = {
            has_idea = wwu_administrative_ideas_7
        }
        always = yes
    }
    else = {
        adm_power = 100
        dip_power = 100
        mil_power = 100
    }
}

has_class_study_gold_cost = {
    if = {
        limit = {
            is_variable_equal = { which = class_study_difficulty value = 1 }
        }
        years_of_income = 2.0
    }
    else_if = {
        limit = {
            is_variable_equal = { which = class_study_difficulty value = 2 }
        }
        years_of_income = 3.0
    }
    else_if = {
        limit = {
            is_variable_equal = { which = class_study_difficulty value = 3 }
        }
        years_of_income = 4.0
    }
    else_if = {
        limit = {
            is_variable_equal = { which = class_study_difficulty value = 4 }
        }
        years_of_income = 5.0
    }
    else_if = {
        limit = {
            is_variable_equal = { which = class_study_difficulty value = 5 }
        }
        years_of_income = 6.0
    }
    else_if = {
        limit = {
            is_variable_equal = { which = class_study_difficulty value = 6 }
        }
        years_of_income = 7.0
    }
    else_if = {
        limit = {
            is_variable_equal = { which = class_study_difficulty value = 7 }
        }
        years_of_income = 8.0
    }
    else_if = {
        limit = {
            is_variable_equal = { which = class_study_difficulty value = 8 }
        }
        years_of_income = 9.0
    }
    else_if = {
        limit = {
            is_variable_equal = { which = class_study_difficulty value = 9 }
        }
        years_of_income = 10.0
    }
    else_if = {
        limit = {
            is_variable_equal = { which = class_study_difficulty value = 10 }
        }
        years_of_income = 10.0
    }
    else = {
        years_of_income = 1.0
    }
}

# Classes
can_be_warrior = {
	OR = {
		religion_group = death_group
		religion_group = disorder_group
		religion_group = elemental_group
		religion_group = life_group
		religion_group = light_group
		religion_group = order_group
		religion_group = philosophy_group
		religion_group = shadow_group
        religion_group = azerothian_group
        religion_group = draenorian_group
	}
}

can_be_paladin = {
	religion_group = light_group
}

can_be_priest = {
	OR = {
		religion_group = death_group
		religion_group = disorder_group
		religion_group = elemental_group
		religion_group = life_group
		religion_group = light_group
		religion_group = order_group
		religion_group = philosophy_group
		religion_group = shadow_group
        religion_group = azerothian_group
        religion_group = draenorian_group
	}
}

can_be_rogue = {
	OR = {
		religion_group = death_group
		religion_group = disorder_group
		religion_group = elemental_group
		religion_group = life_group
		religion_group = light_group
		religion_group = order_group
		religion_group = philosophy_group
		religion_group = shadow_group
        religion_group = azerothian_group
        religion_group = draenorian_group
	}
}

can_be_mage = {
	OR = {
		religion_group = death_group
		religion_group = disorder_group
		religion_group = elemental_group
		religion_group = life_group
		religion_group = light_group
		religion_group = order_group
		religion_group = philosophy_group
		religion_group = shadow_group
	}
	NOT = { religion = fel }
}

can_be_warlock = {
	religion = fel
}

can_be_druid = {
	OR = {
		religion_group = elemental_group
		religion_group = life_group
		religion = voodoo
		religion = hakkari
		religion = bloodmancy
	}
	NOT = { religion = elune }
	NOT = { religion = celestials }
}

can_be_hunter = {
	OR = {
		religion_group = death_group
		religion_group = disorder_group
		religion_group = elemental_group
		religion_group = life_group
		religion_group = light_group
		religion_group = order_group
		religion_group = philosophy_group
		religion_group = shadow_group
        religion_group = azerothian_group
        religion_group = draenorian_group
	}
}

can_be_shaman = {
	OR = {
		religion_group = elemental_group
		religion_group = life_group
        religion_group = azerothian_group
        religion_group = draenorian_group
		religion = voodoo
		religion = hakkari
		religion = bloodmancy
	}
	NOT = { religion = elune }
	NOT = { religion = celestials }
}

can_be_death_knight = {
	OR = {
		religion = cult_of_the_damned
		culture_group = culture_group_scourge
		primary_culture = culture_death_knight
	}
}

can_be_monk = {
	OR = {
		religion_group = death_group
		religion_group = disorder_group
		religion_group = elemental_group
		religion_group = life_group
		religion_group = light_group
		religion_group = order_group
		religion_group = philosophy_group
		religion_group = shadow_group
	}
}

can_be_demon_hunter = {
	OR = {
		culture_group = culture_group_thalassian
		culture_group = culture_group_darnassian
	}
	NOT = { religion = druidism }
}

ruler_is_warrior = {
    has_ruler_flag = warrior_personality
}

ruler_is_paladin = {
    has_ruler_flag = paladin_personality
}

ruler_is_priest = {
    has_ruler_flag = priest_personality
}

ruler_is_rogue = {
    has_ruler_flag = rogue_personality
}

ruler_is_mage = {
    has_ruler_flag = mage_personality
}

ruler_is_druid = {
    has_ruler_flag = druid_personality
}

ruler_is_hunter = {
    has_ruler_flag = hunter_personality
}

ruler_is_warlock = {
    has_ruler_flag = warlock_personality
}

ruler_is_shaman = {
    has_ruler_flag = shaman_personality
}

ruler_is_death_knight = {
    has_ruler_flag = death_knight_personality
}

ruler_is_monk = {
    has_ruler_flag = monk_personality
}

ruler_is_demon_hunter = {
    has_ruler_flag = demon_hunter_personality
}

#------------------------
# Energy
#------------------------
has_energy_0 = {
    custom_trigger_tooltip = {
        tooltip = HAS_ENERGY_0
    
        NOT = {
            check_variable = {
                which = ruler_energy
                value = 1
            }
        }
    }
}

has_energy_1 = {
    custom_trigger_tooltip = {
        tooltip = HAS_ENERGY_1
    
        check_variable = {
            which = ruler_energy
            value = 1
        }
    }
}
has_energy_2 = {
    custom_trigger_tooltip = {
        tooltip = HAS_ENERGY_2
    
        check_variable = {
            which = ruler_energy
            value = 2
        }
    }
}
has_energy_3 = {
    custom_trigger_tooltip = {
        tooltip = HAS_ENERGY_3
    
        check_variable = {
            which = ruler_energy
            value = 3
        }
    }
}
has_energy_4 = {
    custom_trigger_tooltip = {
        tooltip = HAS_ENERGY_4
    
        check_variable = {
            which = ruler_energy
            value = 4
        }
    }
}
has_energy_5 = {
    custom_trigger_tooltip = {
        tooltip = HAS_ENERGY_5
    
        check_variable = {
            which = ruler_energy
            value = 5
        }
    }
}

#------------------------
# Energy Inverse
#------------------------
has_less_than_1_energy = {
    NOT = {
        check_variable = {
            which = ruler_energy
            value = 1
        }
    }
}
has_less_than_2_energy = {
    NOT = {
        check_variable = {
            which = ruler_energy
            value = 2
        }
    }
}
has_less_than_3_energy = {
    NOT = {
        check_variable = {
            which = ruler_energy
            value = 3
        }
    }
}
has_less_than_4_energy = {
    NOT = {
        check_variable = {
            which = ruler_energy
            value = 4
        }
    }
}
has_less_than_5_energy = {
    NOT = {
        check_variable = {
            which = ruler_energy
            value = 5
        }
    }
}