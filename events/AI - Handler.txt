namespace = wwu_ai_handler

#----------------------------
# Summary
#----------------------------
# These events mirror the Custom GUI features in terms of explicit actions.
# Presentation relevant elements are not included since this is purely for the AI.
# These events can occur every 1/2/3/4 years, depending on the random ai_handler_<feature>_timer duration set.

#----------------------------
# Magical Study
#----------------------------
# This emulates the Magical Study GUI feature for the AI.
country_event = {
	id = wwu_ai_handler.1
	title = wwu_ai_handler.1.title
	desc = wwu_ai_handler.1.desc
	picture = RAFAAM_eventPicture
    
    is_triggered_only = yes
    hidden = yes
    
    trigger = {
        is_not_spellcaster = yes
        
        # Civilized nations only
        is_civilized = yes
        
        # AI requirements
        stability = 1
        adm_power = 600
        dip_power = 600
        mil_power = 600
        
        # Add some randomness so the AI doesn't instantly take it 100% of them time it meets the requirements
        OR = {
            has_country_flag = random_flag_0
            has_country_flag = random_flag_1
            has_country_flag = random_flag_2
            has_country_flag = random_flag_3
            has_country_flag = random_flag_4
        }
    }

	mean_time_to_happen = {
		days = 1
	}
	
    # Start Study
	option = {
		name = wwu_ai_handler.1.option.a
		
        trigger = {
            is_not_in_magical_study = yes
            has_magical_study_cost = yes
        }
        
        take_magical_study_cost = yes
        start_magical_study = yes
        
        log = "[Root.GetName] - Magical Study: Start Study"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Cancel Study
	option = {
		name = wwu_ai_handler.1.option.a
		
        trigger = {
            is_in_magical_study = yes
        }
        
        cancel_magical_study = yes
        
        log = "[Root.GetName] - Magical Study: Cancel Study"
        
        ai_chance = {
            factor = 0 # AI should not use this
        }
	}
    
    # Boost Study
	option = {
		name = wwu_ai_handler.1.option.e
		
        trigger = {
            is_in_magical_study = yes
            has_not_completed_magical_study = yes
            has_magical_study_gold_cost = yes
        }
        
        boost_magical_study_action = yes
        
        log = "[Root.GetName] - Magical Study: Boost Study"
        
        ai_chance = {
            factor = 0 # AI should not use this
        }
	}
    
    # No Action
	option = {
		name = wwu_ai_handler.1.option.x
		
        trigger = {
        
        }
        
        ai_chance = {
            factor = 10
        }
	}
}

#----------------------------
# Spellbook - Status
#----------------------------
# This emulates the Spellbook GUI utility features for the AI.
country_event = {
	id = wwu_ai_handler.2
	title = wwu_ai_handler.2.title
	desc = wwu_ai_handler.2.desc
	picture = RAFAAM_eventPicture
    
    is_triggered_only = yes
    hidden = yes
    
    trigger = {
       is_spellcaster = yes
    }

	mean_time_to_happen = {
		days = 1
	}
	
    # Boost Aptitude
	option = {
		name = wwu_ai_handler.2.option.a
		
        trigger = {
            NOT = { has_legendary_aptitude = yes }
            has_aptitude_boost_cost = yes
        }
        
        take_aptitude_boost_cost = yes
        add_aptitude_point = yes
        
        log = "[Root.GetName] - Spellbook: Boost Aptitude"
        
        ai_chance = {
            factor = 100
            
            # Only allow AI to use this if they have a healthy power reserve
            modifier = {
                factor = 0
                
                NOT = { adm_power = 800 }
            }
        }
	}
    # Boost Finesse
	option = {
		name = wwu_ai_handler.2.option.a
		
        trigger = {
            NOT = { has_legendary_finesse = yes }
            has_finesse_boost_cost = yes
        }
        
        take_finesse_boost_cost = yes
        add_finesse_point = yes
        
        log = "[Root.GetName] - Spellbook: Boost Finesse"
        
        ai_chance = {
            factor = 100
            
            # Only allow AI to use this if they have a healthy power reserve
            modifier = {
                factor = 0
                
                NOT = { mil_power = 800 }
            }
        }
	}
    # Boost Concentration
	option = {
		name = wwu_ai_handler.2.option.a
		
        trigger = {
            NOT = { has_legendary_concentration = yes }
            has_concentration_boost_cost = yes
        }
        
        take_concentration_boost_cost = yes
        add_concentration_point = yes
        
        log = "[Root.GetName] - Spellbook: Boost Concentration"
        
        ai_chance = {
            factor = 100
            
            # Only allow AI to use this if they have a healthy power reserve
            modifier = {
                factor = 0
                
                NOT = { adm_power = 800 }
            }
        }
	}
    
    # Change School
	option = {
		name = wwu_ai_handler.2.option.a
		
        trigger = {
            has_no_magic_school = yes # Only do this if they don't have one set already
            NOT = { has_ruler_flag = ai_handler__set_magic_school }
        }
        
        set_ruler_flag = ai_handler__set_magic_school
        
        # TODO:
        # Add some logic so AI of X type will select school of X type over others
        
        # This will cascade to the last viable school.
        if = {
            limit = {
                can_select_school__arcane = yes
            }
            set_magic_school = {
                arcane = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Arcane"
        }
        if = {
            limit = {
                can_select_school__holy = yes
            }
            set_magic_school = {
                holy = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Holy"
        }
        if = {
            limit = {
                can_select_school__chi = yes
            }
            set_magic_school = {
                chi = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Chi"
        }
        if = {
            limit = {
                can_select_school__voodoo = yes
            }
            set_magic_school = {
                voodoo = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Voodoo"
        }
        if = {
            limit = {
                can_select_school__nature = yes
            }
            set_magic_school = {
                nature = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Nature"
        }
        if = {
            limit = {
                can_select_school__necromancy = yes
            }
            set_magic_school = {
                necromancy = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Necromancy"
        }
        if = {
            limit = {
                can_select_school__shamanism = yes
            }
            set_magic_school = {
                shamanism = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Shamanism"
        }
        if = {
            limit = {
                can_select_school__fel = yes
            }
            set_magic_school = {
                fel = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Fel"
        }
        if = {
            limit = {
                can_select_school__draconic = yes
            }
            set_magic_school = {
                draconic = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Draconic"
        }
        if = {
            limit = {
                can_select_school__corruption = yes
            }
            set_magic_school = {
                corruption = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Corruption"
        }
        if = {
            limit = {
                can_select_school__shadow = yes
            }
            set_magic_school = {
                shadow = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Shadow"
        }
        if = {
            limit = {
                can_select_school__titanic = yes
            }
            set_magic_school = {
                titanic = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Titanic"
        }
        if = {
            limit = {
                can_select_school__runic = yes
            }
            set_magic_school = {
                runic = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Runic"
        }
        if = {
            limit = {
                can_select_school__nightmare = yes
            }
            set_magic_school = {
                nightmare = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Nightmare"
        }
        if = {
            limit = {
                can_select_school__earth = yes
            }
            set_magic_school = {
                elemental_earth = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Earth"
        }
        if = {
            limit = {
                can_select_school__fire = yes
            }
            set_magic_school = {
                elemental_fire = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Fire"
        }
        if = {
            limit = {
                can_select_school__water = yes
            }
            set_magic_school = {
                elemental_water = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Water"
        }
        if = {
            limit = {
                can_select_school__wind = yes
            }
            set_magic_school = {
                elemental_wind = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Wind"
        }
        if = {
            limit = {
                can_select_school__domination = yes
            }
            set_magic_school = {
                domination = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Domination"
        }
        if = {
            limit = {
                can_select_school__soul = yes
            }
            set_magic_school = {
                soul = yes
            }
            log = "[Root.GetName] - Spellbook: Set School to Soul"
        }
        
        ai_chance = {
            factor = 1000 # Priority as this is a one-time action
        }
	}
    
    # No Action
	option = {
		name = wwu_ai_handler.1.option.x
		
        log = "[Root.GetName] - Spellbook: Status No Action"
        
        ai_chance = {
            factor = 20
        }
	}
}

#----------------------------
# Spellbook - Spells
#----------------------------
# This emulates the Spellbook GUI spell features for the AI.
country_event = {
	id = wwu_ai_handler.3
	title = wwu_ai_handler.3.title
	desc = wwu_ai_handler.3.desc
	picture = RAFAAM_eventPicture
    
    is_triggered_only = yes
    hidden = yes
    
    trigger = {
       is_spellcaster = yes
    }

	mean_time_to_happen = {
		days = 1
	}
	
	# Generic: Conjure Gold
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            spell_trigger__conjure_gold = yes
        }
        
        spell_effect__conjure_gold = yes
        
        log = "[Root.GetName] - Spellbook: Conjure Gold"
        
        ai_chance = {
            factor = 100
        }
	}
    # Generic: Inspire Glory
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            spell_trigger__inspire_glory = yes
        }
        
        spell_effect__inspire_glory = yes
        
        log = "[Root.GetName] - Spellbook: Inspire Glory"
        
        ai_chance = {
            factor = 100
        }
	}
    # Generic: Purge Opponents
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            spell_trigger__purge_opponents = yes
        }
        
        spell_effect__purge_opponents = yes
        
        log = "[Root.GetName] - Spellbook: Purge Opponents"
        
        ai_chance = {
            factor = 100
        }
	}
    # Generic: Emit Splendiferous Show
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            spell_trigger__emit_splendiferous_show = yes
        }
        
        spell_effect__emit_splendiferous_show = yes
        
        log = "[Root.GetName] - Spellbook: Emit Splendiferous Show"
        
        ai_chance = {
            factor = 100
        }
	}
    # Generic: Arouse Support
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            spell_trigger__arouse_support = yes
        }
        
        spell_effect__arouse_support = yes
        
        log = "[Root.GetName] - Spellbook: Arouse Support"
        
        ai_chance = {
            factor = 100
        }
	}
    # Generic: Soothe Population
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            spell_trigger__soothe_population = yes
        }
        
        spell_effect__soothe_population = yes
        
        log = "[Root.GetName] - Spellbook: Soothe Population"
        
        ai_chance = {
            factor = 100
        }
	}
    # Generic: Quell Fear
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            spell_trigger__quell_fear = yes
        }
        
        spell_effect__quell_fear = yes
        
        log = "[Root.GetName] - Spellbook: Quell Fear"
        
        ai_chance = {
            factor = 100
        }
	}
    # Generic: Rally Soldiers
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            spell_trigger__rally_soldiers = yes
        }
        
        spell_effect__rally_soldiers = yes
        
        log = "[Root.GetName] - Spellbook: Rally Soldiers"
        
        ai_chance = {
            factor = 100
        }
	}
    # Generic: Rally Sailors
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            spell_trigger__rally_sailors = yes
        }
        
        spell_effect__rally_sailors = yes
        
        log = "[Root.GetName] - Spellbook: Rally Sailors"
        
        ai_chance = {
            factor = 100
        }
	}
    # Generic: Galvinize Creativity
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            spell_trigger__galvinize_creativity = yes
        }
        
        spell_effect__galvinize_creativity = yes
        
        log = "[Root.GetName] - Spellbook: Galvanize Creativity"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Arcane: Polymorph
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__arcane = yes
            spell_trigger__polymorph = yes
        }
        
        spell_effect__polymorph = yes
        
        log = "[Root.GetName] - Spellbook: Polymorph"
        
        ai_chance = {
            factor = 100
        }
	}
    # Arcane: Presence of Mind
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__arcane = yes
            spell_trigger__presence_of_mind = yes
        }
        
        spell_effect__presence_of_mind = yes
        
        log = "[Root.GetName] - Spellbook: Presence of Mind"
        
        ai_chance = {
            factor = 100
        }
	}
    # Arcane: Touch of the Magi
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__arcane = yes
            spell_trigger__touch_of_the_magi = yes
        }
        
        spell_effect__touch_of_the_magi = yes
        
        log = "[Root.GetName] - Spellbook: Touch of the Magi"
        
        ai_chance = {
            factor = 100
        }
	}
    # Arcane: Alter Time
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__arcane = yes
            spell_trigger__alter_time = yes
        }
        
        spell_effect__alter_time = yes
        
        log = "[Root.GetName] - Spellbook: Alter Time"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Holy: Judgment
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__holy = yes
            spell_trigger__judgment = yes
        }
        
        spell_effect__judgment = yes
        
        log = "[Root.GetName] - Spellbook: Judgment"
        
        ai_chance = {
            factor = 100
        }
	}
    # Holy: Divine Tempest
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__holy = yes
            spell_trigger__divine_tempest = yes
        }
        
        spell_effect__divine_tempest = yes
        
        log = "[Root.GetName] - Spellbook: Divine Tempest"
        
        ai_chance = {
            factor = 100
        }
	}
    # Holy: Fortifying Aura
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__holy = yes
            spell_trigger__fortifying_aura = yes
        }
        
        spell_effect__fortifying_aura = yes
        
        log = "[Root.GetName] - Spellbook: Fortifying Aura"
        
        ai_chance = {
            factor = 100
        }
	}
    # Holy: Avatar of the Light
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__holy = yes
            spell_trigger__avatar_of_the_light = yes
        }
        
        spell_effect__avatar_of_the_light = yes
        
        log = "[Root.GetName] - Spellbook: Avatar of the Light"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Chi: Ring of Peace
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__chi = yes
            spell_trigger__ring_of_peace = yes
        }
        
        spell_effect__ring_of_peace = yes
        
        log = "[Root.GetName] - Spellbook: Ring of Peace"
        
        ai_chance = {
            factor = 100
        }
	}
    # Chi: Renewing Mists
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__chi = yes
            spell_trigger__renewing_mist = yes
        }
        
        spell_effect__renewing_mist = yes
        
        log = "[Root.GetName] - Spellbook: Renewing Mists"
        
        ai_chance = {
            factor = 100
        }
	}
    # Chi: Secret Infusion
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__chi = yes
            spell_trigger__renewing_mist = yes
        }
        
        spell_effect__secret_infusion = yes
        
        log = "[Root.GetName] - Spellbook: Secret Infusion"
        
        ai_chance = {
            factor = 100
        }
	}
    # Chi: Mists of Wisdom
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__chi = yes
            spell_trigger__mists_of_wisdom = yes
        }
        
        spell_effect__mists_of_wisdom = yes
        
        log = "[Root.GetName] - Spellbook: Mists of Wisdom"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Voodoo: Mass Hex
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__voodoo = yes
            spell_trigger__mass_hex = yes
        }
        
        spell_effect__mass_hex = yes
        
        log = "[Root.GetName] - Spellbook: Mass Hex"
        
        ai_chance = {
            factor = 100
        }
	}
    # Voodoo: Zombify
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__voodoo = yes
            spell_trigger__zombify = yes
        }
        
        spell_effect__zombify = yes
        
        log = "[Root.GetName] - Spellbook: Zombify"
        
        ai_chance = {
            factor = 100
        }
	}
    # Voodoo: Healing Wave
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__voodoo = yes
            spell_trigger__healing_wave = yes
        }
        
        spell_effect__healing_wave = yes
        
        log = "[Root.GetName] - Spellbook: Healing Wave"
        
        ai_chance = {
            factor = 100
        }
	}
    # Voodoo: Big Bad Voodoo
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__voodoo = yes
            spell_trigger__big_bad_voodoo = yes
        }
        
        spell_effect__big_bad_voodoo = yes
        
        log = "[Root.GetName] - Spellbook: Big Bad Voodoo"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Nature: Entangling Roots
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__nature = yes
            spell_trigger__entangling_roots = yes
        }
        
        spell_effect__entangling_roots = yes
        
        log = "[Root.GetName] - Spellbook: Entangling Roots"
        
        ai_chance = {
            factor = 0 # Token spell
        }
	}
    # Nature: Tranquility
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__nature = yes
            spell_trigger__tranquility = yes
        }
        
        spell_effect__tranquility = yes
        
        log = "[Root.GetName] - Spellbook: Tranquility"
        
        ai_chance = {
            factor = 100
        }
	}
    # Nature: Regrowth
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__nature = yes
            spell_trigger__regrowth = yes
        }
        
        spell_effect__regrowth = yes
        
        log = "[Root.GetName] - Spellbook: Regrowth"
        
        ai_chance = {
            factor = 100
        }
	}
    # Nature: Force of Nature
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__nature = yes
            spell_trigger__force_of_nature = yes
        }
        
        spell_effect__force_of_nature = yes
        
        log = "[Root.GetName] - Spellbook: Force of Nature"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Necromancy: Death and Decay
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__necromancy = yes
            spell_trigger__death_and_decay = yes
        }
        
        spell_effect__death_and_decay = yes
        
        log = "[Root.GetName] - Spellbook: Death and Decay"
        
        ai_chance = {
            factor = 0 # Token spell
        }
	}
    # Necromancy: Lichborne
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__necromancy = yes
            spell_trigger__lichborne = yes
        }
        
        spell_effect__lichborne = yes
        
        log = "[Root.GetName] - Spellbook: Lichborne"
        
        ai_chance = {
            factor = 100
        }
	}
    # Necromancy: Pestilence
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__necromancy = yes
            spell_trigger__pestilence = yes
        }
        
        spell_effect__pestilence = yes
        
        log = "[Root.GetName] - Spellbook: Pestilence"
        
        ai_chance = {
            factor = 0 # Token spell
        }
	}
    # Necromancy: Raise Undead
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__necromancy = yes
            spell_trigger__raise_undead = yes
        }
        
        spell_effect__raise_undead = yes
        
        log = "[Root.GetName] - Spellbook: Raise Undead"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Shamanism: Volcanic Rupture
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__shamanism = yes
            spell_trigger__volcanic_rupture = yes
        }
        
        spell_effect__volcanic_rupture = yes
        
        log = "[Root.GetName] - Spellbook: Volcanic Rupture"
        
        ai_chance = {
            factor = 0 # Token spell
        }
	}
    # Shaman: Healing Rain
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__shamanism = yes
            spell_trigger__healing_rain = yes
        }
        
        spell_effect__healing_rain = yes
        
        log = "[Root.GetName] - Spellbook: Healing Rain"
        
        ai_chance = {
            factor = 100
        }
	}
    # Shamanism: Static Charge
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__shamanism = yes
            spell_trigger__static_charge = yes
        }
        
        spell_effect__static_charge = yes
        
        log = "[Root.GetName] - Spellbook: Static Charge"
        
        ai_chance = {
            factor = 0
        }
	}
    # Shamanism: Earthquake
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__shamanism = yes
            spell_trigger__earthquake = yes
        }
        
        spell_effect__earthquake = yes
        
        log = "[Root.GetName] - Spellbook: Earthquake"
        
        ai_chance = {
            factor = 0 # Token spell
        }
	}
    
    # Fel: Hellfire
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__fel = yes
            spell_trigger__hellfire = yes
        }
        
        spell_effect__hellfire = yes
        
        log = "[Root.GetName] - Spellbook: Hellfire"
        
        ai_chance = {
            factor = 0 # token spell
        }
	}
    # Fel: Howl of Terror
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__fel = yes
            spell_trigger__howl_of_terror = yes
        }
        
        spell_effect__howl_of_terror = yes
        
        log = "[Root.GetName] - Spellbook: Howl of Terror"
        
        ai_chance = {
            factor = 100
        }
	}
    # Fel: Banish
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__fel = yes
            spell_trigger__banish = yes
        }
        
        spell_effect__banish = yes
        
        log = "[Root.GetName] - Spellbook: Banish"
        
        ai_chance = {
            factor = 0
        }
	}
    # Fel: Demonic Empowerment
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__fel = yes
            spell_trigger__demonic_empowerment = yes
        }
        
        spell_effect__demonic_empowerment = yes
        
        log = "[Root.GetName] - Spellbook: Demonic Empowerment"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Draconic: Living Flame
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__draconic = yes
            spell_trigger__living_flame = yes
        }
        
        spell_effect__living_flame = yes
        
        log = "[Root.GetName] - Spellbook: Living Flame"
        
        ai_chance = {
            factor = 0 # Token spell
        }
	}
    # Draconic: Azure Wisdom
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__draconic = yes
            spell_trigger__azure_wisdom = yes
        }
        
        spell_effect__azure_wisdom = yes
        
        log = "[Root.GetName] - Spellbook: Azure Wisdom"
        
        ai_chance = {
            factor = 100
        }
	}
    # Draconic: Temporal Haste
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__draconic = yes
            spell_trigger__temporal_haste = yes
        }
        
        spell_effect__temporal_haste = yes
        
        log = "[Root.GetName] - Spellbook: Temporal Haste"
        
        ai_chance = {
            factor = 100
        }
	}
    # Draconic: Ephemeral Dream
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__draconic = yes
            spell_trigger__ephemeral_dream = yes
        }
        
        spell_effect__ephemeral_dream = yes
        
        log = "[Root.GetName] - Spellbook: Ephemeral Dream"
        
        ai_chance = {
            factor = 100
        }
	}
    # Draconic: Obisidan Skin
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__draconic = yes
            spell_trigger__obsidian_skin = yes
        }
        
        spell_effect__obsidian_skin = yes
        
        log = "[Root.GetName] - Spellbook: Obsidian Skin"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Corruption: Whisper of Despair
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__corruption = yes
            spell_trigger__whisper_of_despair = yes
        }
        
        spell_effect__whisper_of_despair = yes
        
        log = "[Root.GetName] - Spellbook: Whisper of Despair"
        
        ai_chance = {
            factor = 0 # token spell
        }
	}
    # Corruption: Call of the Faceless
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__corruption = yes
            spell_trigger__call_of_the_faceless = yes
        }
        
        spell_effect__call_of_the_faceless = yes
        
        log = "[Root.GetName] - Spellbook: Call of the Faceless"
        
        ai_chance = {
            factor = 100
        }
	}
    # Corruption: Corrupting Influence
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__corruption = yes
            spell_trigger__corrupting_influence = yes
        }
        
        spell_effect__corrupting_influence = yes
        
        log = "[Root.GetName] - Spellbook: Corrupting Influence"
        
        ai_chance = {
            factor = 100
        }
	}
    # Mindworms
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__corruption = yes
            spell_trigger__mindworms = yes
        }
        
        spell_effect__mindworms = yes
        
        log = "[Root.GetName] - Spellbook: Mindworms"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Shadow: Mind Control
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__shadow = yes
            spell_trigger__mind_control = yes
        }
        
        spell_effect__mind_control = yes
        
        log = "[Root.GetName] - Spellbook: Mind Control"
        
        ai_chance = {
            factor = 0 # token spell
        }
	}
    # Shadow: Soothe Mind
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__shadow = yes
            spell_trigger__soothe_mind = yes
        }
        
        spell_effect__soothe_mind = yes
        
        log = "[Root.GetName] - Spellbook: Soothe Mind"
        
        ai_chance = {
            factor = 100
        }
	}
    # Shadow: Mind Blast
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__shadow = yes
            spell_trigger__mind_blast = yes
        }
        
        spell_effect__mind_blast = yes
        
        log = "[Root.GetName] - Spellbook: Mind Blast"
        
        ai_chance = {
            factor = 100
        }
	}
    # Shadow: Dark Whispers
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__shadow = yes
            spell_trigger__dark_whispers = yes
        }
        
        spell_effect__dark_whispers = yes
        
        log = "[Root.GetName] - Spellbook: Dark Whispers"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Titanic: Highfather's Will
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__titanic = yes
            spell_trigger__highfathers_will = yes
        }
        
        spell_effect__highfathers_will = yes
        
        log = "[Root.GetName] - Spellbook: Highfather's Will"
        
        ai_chance = {
            factor = 0 # token spell
        }
	}
    # Titanic: Order Above All
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__titanic = yes
            spell_trigger__order_above_all = yes
        }
        
        spell_effect__order_above_all = yes
        
        log = "[Root.GetName] - Spellbook: Order Above All"
        
        ai_chance = {
            factor = 100
        }
	}
    # Titanic: Blessing of the Titans
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__titanic = yes
            spell_trigger__blessing_of_the_titans = yes
        }
        
        spell_effect__blessing_of_the_titans = yes
        
        log = "[Root.GetName] - Spellbook: Blessing of the Titans"
        
        ai_chance = {
            factor = 100
        }
	}
    # Titanic: Power from Beyond
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__titanic = yes
            spell_trigger__power_from_beyond = yes
        }
        
        spell_effect__power_from_beyond = yes
        
        log = "[Root.GetName] - Spellbook: Power from Beyond"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Runic: Forbidden Rune
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__runic = yes
            spell_trigger__forbidden_rune = yes
        }
        
        spell_effect__forbidden_rune = yes
        
        log = "[Root.GetName] - Spellbook: Forbidden Rune"
        
        ai_chance = {
            factor = 100
        }
	}
    # Runic: Runic Empowerment
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__runic = yes
            spell_trigger__runic_empowerment = yes
        }
        
        spell_effect__runic_empowerment = yes
        
        log = "[Root.GetName] - Spellbook: Runic Empowerment"
        
        ai_chance = {
            factor = 100
        }
	}
    # Runic: Ice Barrage
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__runic = yes
            spell_trigger__ice_barrage = yes
        }
        
        spell_effect__ice_barrage = yes
        
        log = "[Root.GetName] - Spellbook: Ice Barrage"
        
        ai_chance = {
            factor = 100
        }
	}
    # Runic: Ancestral Knowledge
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__runic = yes
            spell_trigger__ancestral_knowledge = yes
        }
        
        spell_effect__ancestral_knowledge = yes
        
        log = "[Root.GetName] - Spellbook: Ancestral Knowledge"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Nightmare: Waking Nightmare
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__nightmare = yes
            spell_trigger__waking_nightmare = yes
        }
        
        spell_effect__waking_nightmare = yes
        
        log = "[Root.GetName] - Spellbook: Waking Nightmare"
        
        ai_chance = {
            factor = 100
        }
	}
    # Nightmare: Corrupting Aura
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__nightmare = yes
            spell_trigger__corrupting_aura = yes
        }
        
        spell_effect__corrupting_aura = yes
        
        log = "[Root.GetName] - Spellbook: Corrupting Aura"
        
        ai_chance = {
            factor = 100
        }
	}
    # Nightmare: Beckon the Horrors
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__nightmare = yes
            spell_trigger__beckon_the_horrors = yes
        }
        
        spell_effect__beckon_the_horrors = yes
        
        log = "[Root.GetName] - Spellbook: Beckon the Horrors"
        
        ai_chance = {
            factor = 100
        }
	}
    # Nightmare: Nightmare Rift
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__nightmare = yes
            spell_trigger__nightmare_rift = yes
        }
        
        spell_effect__nightmare_rift = yes
        
        log = "[Root.GetName] - Spellbook: Nightmare Rift"
        
        ai_chance = {
            factor = 0 # token spell
        }
	}
    
    # Earth: Enrichment
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__earth = yes
            spell_trigger__enrichment = yes
        }
        
        spell_effect__enrichment = yes
        
        log = "[Root.GetName] - Spellbook: Enrichment"
        
        ai_chance = {
            factor = 0 # token spell
        }
	}
    # Earth: Earthquake
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__earth = yes
            spell_trigger__earthquake = yes
        }
        
        spell_effect__earthquake = yes
        
        log = "[Root.GetName] - Spellbook: Earthquake"
        
        ai_chance = {
            factor = 0 # token spell
        }
	}
    # Earth: Riches of the Earth
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__earth = yes
            spell_trigger__riches_of_the_earth = yes
        }
        
        spell_effect__riches_of_the_earth = yes
        
        log = "[Root.GetName] - Spellbook: Riches of the Earth"
        
        ai_chance = {
            factor = 100
        }
	}
    # Earth: Living Stone
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__earth = yes
            spell_trigger__living_stone = yes
        }
        
        spell_effect__living_stone = yes
        
        log = "[Root.GetName] - Spellbook: Living Stone"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Fire: Volcanic Ruputure
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__fire = yes
            spell_trigger__volcanic_rupture = yes
        }
        
        spell_effect__volcanic_rupture = yes
        
        log = "[Root.GetName] - Spellbook: Volcanic Rupture"
        
        ai_chance = {
            factor = 0 # token spell
        }
	}
    # Fire: Everlasting Flame
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__fire = yes
            spell_trigger__everlasting_flame = yes
        }
        
        spell_effect__everlasting_flame = yes
        
        log = "[Root.GetName] - Spellbook: Everlasting Flame"
        
        ai_chance = {
            factor = 100
        }
	}
    # Fire: Purged by Fire
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__fire = yes
            spell_trigger__purged_by_fire = yes
        }
        
        spell_effect__purged_by_fire = yes
        
        log = "[Root.GetName] - Spellbook: Purged by Fire"
        
        ai_chance = {
            factor = 0 # token spell
        }
	}
    # Fire: Unstable Combustion
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__fire = yes
            spell_trigger__unstable_combustion = yes
        }
        
        spell_effect__unstable_combustion = yes
        
        log = "[Root.GetName] - Spellbook: Unstable Combustion"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Water: Healing Rain
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__water = yes
            spell_trigger__healing_rain = yes
        }
        
        spell_effect__healing_rain = yes
        
        log = "[Root.GetName] - Spellbook: Healing Rain"
        
        ai_chance = {
            factor = 100
        }
	}
    # Water: Primordial Swell
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__water = yes
            spell_trigger__primordial_swell = yes
        }
        
        spell_effect__primordial_swell = yes
        
        log = "[Root.GetName] - Spellbook: Primordial Swell"
        
        ai_chance = {
            factor = 100
        }
	}
    # Water: Touch of Purification
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__water = yes
            spell_trigger__touch_of_purification = yes
        }
        
        spell_effect__touch_of_purification = yes
        
        log = "[Root.GetName] - Spellbook: Touch of Purification"
        
        ai_chance = {
            factor = 0 # token spell
        }
	}
    # Water: Abyssal Tides
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__water = yes
            spell_trigger__abyssal_tides = yes
        }
        
        spell_effect__abyssal_tides = yes
        
        log = "[Root.GetName] - Spellbook: Abyssal Tides"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Wind: Winds of Change
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__wind = yes
            spell_trigger__winds_of_change = yes
        }
        
        spell_effect__winds_of_change = yes
        
        log = "[Root.GetName] - Spellbook: Winds of Change"
        
        ai_chance = {
            factor = 100
        }
	}
    # Wind: Slicing Wind
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__wind = yes
            spell_trigger__slicing_wind = yes
        }
        
        spell_effect__slicing_wind = yes
        
        log = "[Root.GetName] - Spellbook: Slicing Wind"
        
        ai_chance = {
            factor = 100
        }
	}
    # Wind: Windwalk
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__wind = yes
            spell_trigger__windwalk = yes
        }
        
        spell_effect__windwalk = yes
        
        log = "[Root.GetName] - Spellbook: Windwalk"
        
        ai_chance = {
            factor = 100
        }
	}
    # Wind: Tornado
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__wind = yes
            spell_trigger__tornado = yes
        }
        
        spell_effect__tornado = yes
        
        log = "[Root.GetName] - Spellbook: Tornado"
        
        ai_chance = {
            factor = 0 # token spell
        }
	}
    
    # Domination: Chains of Domination
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__domination = yes
            spell_trigger__chains_of_domination = yes
        }
        
        spell_effect__chains_of_domination = yes
        
        log = "[Root.GetName] - Spellbook: Chains of Domination"
        
        ai_chance = {
            factor = 100
        }
	}
    # Domination: Souls Sacrifice
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__domination = yes
            spell_trigger__soul_sacrifice = yes
        }
        
        spell_effect__soul_sacrifice = yes
        
        log = "[Root.GetName] - Spellbook: Soul Sacrifice"
        
        ai_chance = {
            factor = 100
        }
	}
    # Domination: Shadowsteel Embers
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__domination = yes
            spell_trigger__shadowsteel_embers = yes
        }
        
        spell_effect__shadowsteel_embers = yes
        
        log = "[Root.GetName] - Spellbook: Shadowsteel Embers"
        
        ai_chance = {
            factor = 100
        }
	}
    # Domination: Crushing Dread
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__domination = yes
            spell_trigger__crushing_dread = yes
        }
        
        spell_effect__crushing_dread = yes
        
        log = "[Root.GetName] - Spellbook: Crushing Dread"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Soul: Ascension
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__soul = yes
            spell_trigger__ascension = yes
        }
        
        spell_effect__ascension = yes
        
        log = "[Root.GetName] - Spellbook: Ascension"
        
        ai_chance = {
            factor = 100
        }
	}
    # Soul: Accelerated Incubation
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__soul = yes
            spell_trigger__accelerated_incubation = yes
        }
        
        spell_effect__accelerated_incubation = yes
        
        log = "[Root.GetName] - Spellbook: Accelerated Incubation"
        
        ai_chance = {
            factor = 100
        }
	}
    # Soul: Noxious Spores
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__soul = yes
            spell_trigger__noxious_spores = yes
        }
        
        spell_effect__noxious_spores = yes
        
        log = "[Root.GetName] - Spellbook: Noxious Spores"
        
        ai_chance = {
            factor = 100
        }
	}
    # Soul: Burden of Sin
	option = {
		name = wwu_ai_handler.3.option.a
		
        trigger = {
            is_school__soul = yes
            spell_trigger__burden_of_sin = yes
        }
        
        spell_effect__burden_of_sin = yes
        
        log = "[Root.GetName] - Spellbook: Burden of Sin"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # No Action
	option = {
		name = wwu_ai_handler.3.option.x
		
        trigger = {
        
        }
        
        ai_chance = {
            factor = 1
        }
	}
}

#----------------------------
# Class Study
#----------------------------
# This emulates the Class Study GUI features for the AI.
country_event = {
	id = wwu_ai_handler.10
	title = wwu_ai_handler.10.title
	desc = wwu_ai_handler.10.desc
	picture = RAFAAM_eventPicture
    
    is_triggered_only = yes
    hidden = yes
    
    trigger = {
        ruler_has_no_class = yes
        is_not_in_class_training = yes
        has_class_study_cost = yes
        
        # AI requirements
        stability = 1
        adm_power = 600
        dip_power = 600
        mil_power = 600
        
        # Add some randomness so the AI doesn't instantly take it 100% of them time it meets the requirements
        OR = {
            has_country_flag = random_flag_0
            has_country_flag = random_flag_1
            has_country_flag = random_flag_2
            has_country_flag = random_flag_3
            has_country_flag = random_flag_4
        }
    }

	mean_time_to_happen = {
		days = 1
	}
	
    # Selection: Warrior
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_warrior = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = warrior }
        
        log = "[Root.GetName] - Class Study: Warrior"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Selection: Paladin
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_paladin = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = paladin }
        
        log = "[Root.GetName] - Class Study: Paladin"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Selection: Priest
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_priest = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = priest }
        
        log = "[Root.GetName] - Class Study: Priest"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Selection: Rogue
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_rogue = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = rogue }
        
        log = "[Root.GetName] - Class Study: Rogue"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Selection: Mage
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_mage = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = mage }
        
        log = "[Root.GetName] - Class Study: Mage"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Selection: Warlock
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_warlock = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = warlock }
        
        log = "[Root.GetName] - Class Study: Warlock"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Selection: Druid
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_druid = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = druid }
        
        log = "[Root.GetName] - Class Study: Druid"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Selection: Hunter
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_hunter = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = hunter }
        
        log = "[Root.GetName] - Class Study: Hunter"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Selection: Shaman
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_shaman = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = shaman }
        
        log = "[Root.GetName] - Class Study: Shaman"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Selection: Death Knight
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_death_knight = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = death_knight }
        
        log = "[Root.GetName] - Class Study: Death Knight"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Selection: Monk
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_monk = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = monk }
        
        log = "[Root.GetName] - Class Study: Monk"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Selection: Demon Hunter
	option = {
		name = wwu_ai_handler.10.option.a
		
        trigger = {
            can_be_demon_hunter = yes
        }
        
        take_class_study_cost = yes
        start_class_study = { CLASS = demon_hunter }
        
        log = "[Root.GetName] - Class Study: Demon Hunter"
        
        ai_chance = {
            factor = 100
        }
	}
}

#----------------------------
# Class Abilities
#----------------------------
# This emulates the Class Abilities GUI features for the AI.
country_event = {
	id = wwu_ai_handler.11
	title = wwu_ai_handler.11.title
	desc = wwu_ai_handler.11.desc
	picture = RAFAAM_eventPicture
    
    is_triggered_only = yes
    hidden = yes
    
    trigger = {
       ruler_has_any_class = yes
    }

	mean_time_to_happen = {
		days = 1
	}
	
    # Warrior - Unrelenting Assault
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_warrior = yes
            ability_trigger__warrior_1 = yes
        }
        
        ability_effect__warrior_1 = yes
        
        log = "[Root.GetName] - Class Abilities: Warrior - Unrelenting Assault"
        
        ai_chance = {
            factor = 100
        }
	}
    # Warrior - Second Wind
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_warrior = yes
            ability_trigger__warrior_2 = yes
        }
        
        ability_effect__warrior_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Warrior - Second Wind"
        
        ai_chance = {
            factor = 100
        }
	}
    # Warrior - Battle Shout
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_warrior = yes
            ability_trigger__warrior_3 = yes
        }
        
        ability_effect__warrior_3 = yes
        
        log = "[Root.GetName] - Class Abilities: Warrior - Battle Shout"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Paladin - Blade of Justice
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_paladin = yes
            ability_trigger__paladin_1 = yes
        }
        
        ability_effect__paladin_1 = yes
        
        log = "[Root.GetName] - Class Abilities: paladin - Blade of Justice"
        
        ai_chance = {
            factor = 100
        }
	}
    # Paladin - Long Arm of the Law
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_paladin = yes
            ability_trigger__paladin_2 = yes
        }
        
        ability_effect__paladin_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Paladin - Long Arm of the Law"
        
        ai_chance = {
            factor = 100
        }
	}
    # Paladin - Sanctified Wrath
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_paladin = yes
            ability_trigger__paladin_3 = yes
        }
        
        ability_effect__paladin_3 = yes
        
        log = "[Root.GetName] - Class Abilities: Paladin - Sanctified Wrath"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Priest - Binding Prayers
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_priest = yes
            ability_trigger__priest_1 = yes
        }
        
        ability_effect__priest_1 = yes
        
        log = "[Root.GetName] - Class Abilities: Priest - Binding Prayers"
        
        ai_chance = {
            factor = 100
        }
	}
    # Priest - Evangelism
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_priest = yes
            ability_trigger__priest_2 = yes
        }
        
        ability_effect__priest_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Priest - Evangelism"
        
        ai_chance = {
            factor = 100
        }
	}
    # Priest - Heavenly Voice
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_priest = yes
            ability_trigger__priest_3 = yes
        }
        
        ability_effect__priest_3 = yes
        
        log = "[Root.GetName] - Class Abilities: Priest - Heavenly Voice"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Rogue - Combat Expertise
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_rogue = yes
            ability_trigger__rogue_1 = yes
        }
        
        ability_effect__rogue_1 = yes
        
        log = "[Root.GetName] - Class Abilities: Rogue - Combat Expertise"
        
        ai_chance = {
            factor = 100
        }
	}
    # Rogue - Preparation
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_rogue = yes
            ability_trigger__rogue_2 = yes
        }
        
        ability_effect__rogue_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Rogue - Preparation"
        
        ai_chance = {
            factor = 100
        }
	}
    # Rogue - Master of Subtlety
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_rogue = yes
            ability_trigger__rogue_3 = yes
        }
        
        ability_effect__rogue_3 = yes
        
        log = "[Root.GetName] - Class Abilities: Rogue - Master of Subtlety"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Mage - Time Warp
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_mage = yes
            ability_trigger__mage_1 = yes
        }
        
        ability_effect__mage_1 = yes
        
        log = "[Root.GetName] - Class Abilities: Mage - Time Warp"
        
        ai_chance = {
            factor = 100
        }
	}
    # Mage - Focusing Crystal
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_mage = yes
            ability_trigger__mage_2 = yes
        }
        
        ability_effect__mage_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Mage - Focusing Crystal"
        
        ai_chance = {
            factor = 100
        }
	}
    # Mage - Rune of Power
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_mage = yes
            ability_trigger__mage_3 = yes
        }
        
        ability_effect__mage_3 = yes
        
        log = "[Root.GetName] - Class Abilities: Mage - Rune of Power"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Warlock - Fire and Brimstone
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_warlock = yes
            ability_trigger__warlock_1 = yes
        }
        
        ability_effect__warlock_1 = yes
        
        log = "[Root.GetName] - Class Abilities: Warlock - Fire and Brimstone"
        
        ai_chance = {
            factor = 100
        }
	}
    # Warlock - Jinx
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_warlock = yes
            ability_trigger__warlock_2 = yes
        }
        
        ability_effect__warlock_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Warlock - Jinx"
        
        ai_chance = {
            factor = 100
        }
	}
    # Warlock - Grimoire of Command
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_warlock = yes
            ability_trigger__warlock_3 = yes
        }
        
        ability_effect__warlock_3 = yes
        
        log = "[Root.GetName] - Class Abilities: Warlock - Grimoire of Command"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Druid - Flourish
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_druid = yes
            ability_trigger__druid_1 = yes
        }
        
        ability_effect__druid_1 = yes
        
        log = "[Root.GetName] - Class Abilities: Druid - Flourish"
        
        ai_chance = {
            factor = 100
        }
	}
    # Druid - Natural Perfection
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_druid = yes
            ability_trigger__druid_2 = yes
        }
        
        ability_effect__druid_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Druid - Natural Perfection"
        
        ai_chance = {
            factor = 100
        }
	}
    # Druid - Eclipse
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_druid = yes
            ability_trigger__druid_3 = yes
        }
        
        ability_effect__druid_3 = yes
        
        log = "[Root.GetName] - Class Abilities: Druid - Eclipse"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Hunter - Efficiency
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_hunter = yes
            ability_trigger__hunter_1 = yes
        }
        
        ability_effect__hunter_1 = yes
        
        log = "[Root.GetName] - Class Abilities: Hunter - Efficiency"
        
        ai_chance = {
            factor = 100
        }
	}
    # Hunter - Master Tactitian
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_hunter = yes
            ability_trigger__hunter_2 = yes
        }
        
        ability_effect__hunter_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Hunter - Master Tactitian"
        
        ai_chance = {
            factor = 100
        }
	}
    # Hunter - Camouflage
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_hunter = yes
            ability_trigger__hunter_3 = yes
        }
        
        ability_effect__hunter_3 = yes
        
        log = "[Root.GetName] - Class Abilities: Hunter - Camouflage"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Shaman - Elemental Oath
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_shaman = yes
            ability_trigger__shaman_1 = yes
        }
        
        ability_effect__shaman_1 = yes
        
        log = "[Root.GetName] - Class Abilities: Shaman - Elemental Oath"
        
        ai_chance = {
            factor = 100
        }
	}
    # Shaman - Echo of the Elements
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_shaman = yes
            ability_trigger__shaman_2 = yes
        }
        
        ability_effect__shaman_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Shaman - Echo of the Elements"
        
        ai_chance = {
            factor = 100
        }
	}
    # Shaman - Astral Shift
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_shaman = yes
            ability_trigger__shaman_3 = yes
        }
        
        ability_effect__shaman_3 = yes
        
        log = "[Root.GetName] - Class Abilities: shaman - Camouflage"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Death Knight - Necrotic Aura
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_death_knight = yes
            ability_trigger__death_knight_1 = yes
        }
        
        ability_effect__death_knight_1 = yes
        
        log = "[Root.GetName] - Class Abilities: Death Knight - Necrotic Aura"
        
        ai_chance = {
            factor = 100
        }
	}
    # Death Knight - Death Siphon
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_death_knight = yes
            ability_trigger__death_knight_2 = yes
        }
        
        ability_effect__death_knight_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Death Knight - Death Siphon"
        
        ai_chance = {
            factor = 100
        }
	}
    # Death Knight - Icy Grip
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_death_knight = yes
            ability_trigger__death_knight_3 = yes
        }
        
        ability_effect__death_knight_3 = yes
        
        log = "[Root.GetName] - Class Abilities: Death Knight - Icy Grip"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Monk - Guard
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_monk = yes
            ability_trigger__monk_1 = yes
        }
        
        ability_effect__monk_1 = yes
        
        log = "[Root.GetName] - Class Abilities: Monk - Guard"
        
        ai_chance = {
            factor = 100
        }
	}
    # Monk - Power Strikes
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_monk = yes
            ability_trigger__monk_2 = yes
        }
        
        ability_effect__monk_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Monk - Power Strikes"
        
        ai_chance = {
            factor = 100
        }
	}
    # Monk - Ironskin Brew
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_monk = yes
            ability_trigger__monk_3 = yes
        }
        
        ability_effect__monk_3 = yes
        
        log = "[Root.GetName] - Class Abilities: Monk - Ironskin Brew"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Demon Hunter - Demon Spikes
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_demon_hunter = yes
            ability_trigger__demon_hunter_1 = yes
        }
        
        ability_effect__demon_hunter_1 = yes
        
        log = "[Root.GetName] - Class Abilities: Demon Hunter - Demon Spikes"
        
        ai_chance = {
            factor = 100
        }
	}
    # Demon Hunter - Soul Cleave
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_demon_hunter = yes
            ability_trigger__demon_hunter_2 = yes
        }
        
        ability_effect__demon_hunter_2 = yes
        
        log = "[Root.GetName] - Class Abilities: Demon Hunter - Soul Cleave"
        
        ai_chance = {
            factor = 100
        }
	}
    # Demon Hunter - Spectral Sight
	option = {
		name = wwu_ai_handler.11.option.a
        
        trigger = {
            ruler_is_demon_hunter = yes
            ability_trigger__demon_hunter_3 = yes
        }
        
        ability_effect__demon_hunter_3 = yes
        
        log = "[Root.GetName] - Class Abilities: Demon Hunter - Spectral Sight"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # None
	option = {
		name = wwu_ai_handler.11.option.a
        
        log = "[Root.GetName] - Class Abilities: None"
        
        ai_chance = {
            factor = 10
        }
	}
}


#----------------------------
# Stratagems
#----------------------------
# This emulates the Stratagems GUI features for the AI.
country_event = {
	id = wwu_ai_handler.20
	title = wwu_ai_handler.20.title
	desc = wwu_ai_handler.20.desc
	picture = RAFAAM_eventPicture
    
    is_triggered_only = yes
    hidden = yes
    
    trigger = {
       
    }

	mean_time_to_happen = {
		days = 1
	}
	
    # Offensive Stratagem - Standard
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_offensive_stratagem__standard = yes }
            can_change_offensive_stratagem = yes
            has_offensive_stratagem_cost = yes
            has_unlocked_offensive_stratagem__standard = yes
        }
        
        take_offensive_stratagem_cost = yes
        set_offensive_stratagem = {
            TYPE = standard
        }
        
        log = "[Root.GetName] - Stratagem: Offensive - Standard"
        
        ai_chance = {
            factor = 100
        }
	}
    # Offensive Stratagem - Sow Terror
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_offensive_stratagem__sow_terror = yes }
            can_change_offensive_stratagem = yes
            has_offensive_stratagem_cost = yes
            has_unlocked_offensive_stratagem__sow_terror = yes
        }
        
        take_offensive_stratagem_cost = yes
        set_offensive_stratagem = {
            TYPE = sow_terror
        }
        
        log = "[Root.GetName] - Stratagem: Offensive - Sow Terror"
        
        ai_chance = {
            factor = 100
        }
	}
    # Offensive Stratagem - Slash and Burn
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_offensive_stratagem__slash_and_burn = yes }
            can_change_offensive_stratagem = yes
            has_offensive_stratagem_cost = yes
            has_unlocked_offensive_stratagem__slash_and_burn = yes
        }
        
        take_offensive_stratagem_cost = yes
        set_offensive_stratagem = {
            TYPE = slash_and_burn
        }
        
        random_list = {
            20 = { set_variable = { which = offensive_slash_and_burn_stratagem_level value = 1 } }
            20 = { set_variable = { which = offensive_slash_and_burn_stratagem_level value = 2 } }
            20 = { set_variable = { which = offensive_slash_and_burn_stratagem_level value = 3 } }
            20 = { set_variable = { which = offensive_slash_and_burn_stratagem_level value = 4 } }
            20 = { set_variable = { which = offensive_slash_and_burn_stratagem_level value = 5 } }
        }
        
        log = "[Root.GetName] - Stratagem: Offensive - Slash and Burn"
        
        ai_chance = {
            factor = 100
        }
	}
    # Offensive Stratagem - Enslavement
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_offensive_stratagem__enslavement = yes }
            can_change_offensive_stratagem = yes
            has_offensive_stratagem_cost = yes
            has_unlocked_offensive_stratagem__enslavement = yes
        }
        
        take_offensive_stratagem_cost = yes
        set_offensive_stratagem = {
            TYPE = enslavement
        }
        
        random_list = {
            20 = { set_variable = { which = offensive_enslavement_stratagem_level value = 1 } }
            20 = { set_variable = { which = offensive_enslavement_stratagem_level value = 2 } }
            20 = { set_variable = { which = offensive_enslavement_stratagem_level value = 3 } }
            20 = { set_variable = { which = offensive_enslavement_stratagem_level value = 4 } }
            20 = { set_variable = { which = offensive_enslavement_stratagem_level value = 5 } }
        }
        
        log = "[Root.GetName] - Stratagem: Offensive - Enslavement"
        
        ai_chance = {
            factor = 100
        }
	}
    # Offensive Stratagem - Purification
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_offensive_stratagem__purification = yes }
            can_change_offensive_stratagem = yes
            has_offensive_stratagem_cost = yes
            has_unlocked_offensive_stratagem__purification = yes
        }
        
        take_offensive_stratagem_cost = yes
        set_offensive_stratagem = {
            TYPE = purification
        }
        
        random_list = {
            20 = { set_variable = { which = offensive_purification_stratagem_level value = 1 } }
            20 = { set_variable = { which = offensive_purification_stratagem_level value = 2 } }
            20 = { set_variable = { which = offensive_purification_stratagem_level value = 3 } }
            20 = { set_variable = { which = offensive_purification_stratagem_level value = 4 } }
            20 = { set_variable = { which = offensive_purification_stratagem_level value = 5 } }
        }
        
        log = "[Root.GetName] - Stratagem: Offensive - Purification"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Defensive Stratagem - Standard
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_defensive_stratagem__standard = yes }
            can_change_defensive_stratagem = yes
            has_defensive_stratagem_cost = yes
            has_unlocked_defensive_stratagem__standard = yes
        }
        
        take_defensive_stratagem_cost = yes
        set_defensive_stratagem = {
            TYPE = standard
        }
        
        log = "[Root.GetName] - Stratagem: Defensive - Standard"
        
        ai_chance = {
            factor = 100
        }
	}
    # Defensive Stratagem - Martyrdom
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_defensive_stratagem__martyrdom = yes }
            can_change_defensive_stratagem = yes
            has_defensive_stratagem_cost = yes
            has_unlocked_defensive_stratagem__martyrdom = yes
        }
        
        take_defensive_stratagem_cost = yes
        set_defensive_stratagem = {
            TYPE = martyrdom
        }
        
        random_list = {
            20 = { set_variable = { which = defensive_martyrdom_stratagem_level value = 1 } }
            20 = { set_variable = { which = defensive_martyrdom_stratagem_level value = 2 } }
            20 = { set_variable = { which = defensive_martyrdom_stratagem_level value = 3 } }
            20 = { set_variable = { which = defensive_martyrdom_stratagem_level value = 4 } }
            20 = { set_variable = { which = defensive_martyrdom_stratagem_level value = 5 } }
        }
        
        log = "[Root.GetName] - Stratagem: Defensive - Martyrdom"
        
        ai_chance = {
            factor = 100
        }
	}
    # Defensive Stratagem - Sabotage
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_defensive_stratagem__sabotage = yes }
            can_change_defensive_stratagem = yes
            has_defensive_stratagem_cost = yes
            has_unlocked_defensive_stratagem__sabotage = yes
        }
        
        take_defensive_stratagem_cost = yes
        set_defensive_stratagem = {
            TYPE = sabotage
        }
        
        random_list = {
            20 = { set_variable = { which = defensive_sabotage_stratagem_level value = 1 } }
            20 = { set_variable = { which = defensive_sabotage_stratagem_level value = 2 } }
            20 = { set_variable = { which = defensive_sabotage_stratagem_level value = 3 } }
            20 = { set_variable = { which = defensive_sabotage_stratagem_level value = 4 } }
            20 = { set_variable = { which = defensive_sabotage_stratagem_level value = 5 } }
        }
        
        log = "[Root.GetName] - Stratagem: Defensive - Sabotage"
        
        ai_chance = {
            factor = 100
        }
	}
    # Defensive Stratagem - Slander
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_defensive_stratagem__slander = yes }
            can_change_defensive_stratagem = yes
            has_defensive_stratagem_cost = yes
            has_unlocked_defensive_stratagem__slander = yes
        }
        
        take_defensive_stratagem_cost = yes
        set_defensive_stratagem = {
            TYPE = slander
        }
        
        random_list = {
            20 = { set_variable = { which = defensive_slander_stratagem_level value = 1 } }
            20 = { set_variable = { which = defensive_slander_stratagem_level value = 2 } }
            20 = { set_variable = { which = defensive_slander_stratagem_level value = 3 } }
            20 = { set_variable = { which = defensive_slander_stratagem_level value = 4 } }
            20 = { set_variable = { which = defensive_slander_stratagem_level value = 5 } }
        }
        
        log = "[Root.GetName] - Stratagem: Defensive - Slander"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Insurrection Stratagem - Standard
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_insurrection_stratagem__standard = yes }
            can_change_insurrection_stratagem = yes
            has_insurrection_stratagem_cost = yes
            has_unlocked_insurrection_stratagem__standard = yes
        }
        
        take_insurrection_stratagem_cost = yes
        set_insurrection_stratagem = {
            TYPE = standard
        }
        
        log = "[Root.GetName] - Stratagem: Insurrection - Standard"
        
        ai_chance = {
            factor = 100
        }
	}
    # Insurrection Stratagem - Bribery
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_insurrection_stratagem__bribery = yes }
            can_change_insurrection_stratagem = yes
            has_insurrection_stratagem_cost = yes
            has_unlocked_insurrection_stratagem__bribery = yes
        }
        
        take_insurrection_stratagem_cost = yes
        set_insurrection_stratagem = {
            TYPE = bribery
        }
        
        random_list = {
            20 = { set_variable = { which = insurrection_bribery_stratagem_level value = 1 } }
            20 = { set_variable = { which = insurrection_bribery_stratagem_level value = 2 } }
            20 = { set_variable = { which = insurrection_bribery_stratagem_level value = 3 } }
            20 = { set_variable = { which = insurrection_bribery_stratagem_level value = 4 } }
            20 = { set_variable = { which = insurrection_bribery_stratagem_level value = 5 } }
        }
        
        log = "[Root.GetName] - Stratagem: Insurrection - Bribery"
        
        ai_chance = {
            factor = 100
        }
	}
    # Insurrection Stratagem - Compromise
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_insurrection_stratagem__compromise = yes }
            can_change_insurrection_stratagem = yes
            has_insurrection_stratagem_cost = yes
            has_unlocked_insurrection_stratagem__compromise = yes
        }
        
        take_insurrection_stratagem_cost = yes
        set_insurrection_stratagem = {
            TYPE = compromise
        }
        
        random_list = {
            20 = { set_variable = { which = insurrection_compromise_stratagem_level value = 1 } }
            20 = { set_variable = { which = insurrection_compromise_stratagem_level value = 2 } }
            20 = { set_variable = { which = insurrection_compromise_stratagem_level value = 3 } }
            20 = { set_variable = { which = insurrection_compromise_stratagem_level value = 4 } }
            20 = { set_variable = { which = insurrection_compromise_stratagem_level value = 5 } }
        }
        
        log = "[Root.GetName] - Stratagem: Insurrection - Compromise"
        
        ai_chance = {
            factor = 100
        }
	}
    # Insurrection Stratagem - Garrison
	option = {
		name = wwu_ai_handler.20.option.a
        
        trigger = {
            NOT = { has_insurrection_stratagem__garrison = yes }
            can_change_insurrection_stratagem = yes
            has_insurrection_stratagem_cost = yes
            has_unlocked_insurrection_stratagem__garrison = yes
        }
        
        take_insurrection_stratagem_cost = yes
        set_insurrection_stratagem = {
            TYPE = garrison
        }
        
        random_list = {
            20 = { set_variable = { which = insurrection_garrison_stratagem_level value = 1 } }
            20 = { set_variable = { which = insurrection_garrison_stratagem_level value = 2 } }
            20 = { set_variable = { which = insurrection_garrison_stratagem_level value = 3 } }
            20 = { set_variable = { which = insurrection_garrison_stratagem_level value = 4 } }
            20 = { set_variable = { which = insurrection_garrison_stratagem_level value = 5 } }
        }
        
        log = "[Root.GetName] - Stratagem: Insurrection - Garrison"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # None
	option = {
		name = wwu_ai_handler.20.option.a
        
        log = "[Root.GetName] - Stratagem: None"
        
        ai_chance = {
            factor = 10
        }
	}
}

#----------------------------
# Warcraft Faction Menu
#----------------------------
# This emulates the Warcraft Faction GUI features for the AI.
country_event = {
	id = wwu_ai_handler.40
	title = wwu_ai_handler.40.title
	desc = wwu_ai_handler.40.desc
	picture = RAFAAM_eventPicture
    
    is_triggered_only = yes
    hidden = yes
    
    trigger = {
        is_any_faction_member = yes
        has_faction_renown_100 = yes
    }

	mean_time_to_happen = {
		days = 1
	}
	
    # Alliance: Call upon Compatriots
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_alliance_member = yes
            alliance_decision_trigger_1 = yes
        }
        
        alliance_decision_effect_1 = yes
        
        log = "[Root.GetName] - Alliance Panel: Call upon Compatriots"
        
        ai_chance = {
            factor = 100
        }
	}
    # Alliance: Bolster Standing
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_alliance_member = yes
            alliance_decision_trigger_2 = yes
        }
        
        alliance_decision_effect_2 = yes
        
        log = "[Root.GetName] - Alliance Panel: Bolster Standing"
        
        ai_chance = {
            factor = 100
        }
	}
    # Alliance: Quid Pro Quo
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_alliance_member = yes
            alliance_decision_trigger_3 = yes
        }
        
        alliance_decision_effect_3 = yes
        
        log = "[Root.GetName] - Alliance Panel: Quid Pro Quo"
        
        ai_chance = {
            factor = 100
        }
	}
    # Alliance: Inspire Fervor
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_alliance_member = yes
            alliance_decision_trigger_4 = yes
        }
        
        alliance_decision_effect_4 = yes
        
        log = "[Root.GetName] - Alliance Panel: Inspire Fervor"
        
        ai_chance = {
            factor = 100
        }
	}
    # Alliance: Disseminate Ideas
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_alliance_member = yes
            alliance_decision_trigger_5 = yes
        }
        
        alliance_decision_effect_5 = yes
        
        log = "[Root.GetName] - Alliance Panel: Disseminate Ideas"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Old Horde: Call to War
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_old_horde_member = yes
            old_horde_decision_trigger_1 = yes
        }
        
        old_horde_decision_effect_1 = yes
        
        log = "[Root.GetName] - Old Horde Panel: Call to War"
        
        ai_chance = {
            factor = 100
        }
	}
    # Old Horde: Instill Resilience
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_old_horde_member = yes
            old_horde_decision_trigger_2 = yes
        }
        
        old_horde_decision_effect_2 = yes
        
        log = "[Root.GetName] - Old Horde Panel: Instill Resilience"
        
        ai_chance = {
            factor = 100
        }
	}
    # Old Horde: Enforce Obedience
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_old_horde_member = yes
            old_horde_decision_trigger_3 = yes
        }
        
        old_horde_decision_effect_3 = yes
        
        log = "[Root.GetName] - Old Horde Panel: Enforce Obedience"
        
        ai_chance = {
            factor = 100
        }
	}
    # Old Horde: Bolster Industry
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_old_horde_member = yes
            old_horde_decision_trigger_4 = yes
        }
        
        old_horde_decision_effect_4 = yes
        
        log = "[Root.GetName] - Old Horde Panel: Bolster Industry"
        
        ai_chance = {
            factor = 100
        }
	}
    # Old Horde: Provoke Ferocity
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_old_horde_member = yes
            old_horde_decision_trigger_5 = yes
        }
        
        old_horde_decision_effect_5 = yes
        
        log = "[Root.GetName] - Old Horde Panel: Provoke Ferocity"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Horde: Enforce Tolerance
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_horde_member = yes
            horde_decision_trigger_1 = yes
        }
        
        horde_decision_effect_1 = yes
        
        log = "[Root.GetName] - Horde Panel: Enforce Tolerance"
        
        ai_chance = {
            factor = 100
        }
	}
    # Horde: Bolster Commerce
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_horde_member = yes
            horde_decision_trigger_2 = yes
        }
        
        horde_decision_effect_2 = yes
        
        log = "[Root.GetName] - Horde Panel: Bolster Commerce"
        
        ai_chance = {
            factor = 100
        }
	}
    # Horde: Seek Excellence
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_horde_member = yes
            horde_decision_trigger_3 = yes
        }
        
        horde_decision_effect_3 = yes
        
        log = "[Root.GetName] - Horde Panel: Seek Excellence"
        
        ai_chance = {
            factor = 100
        }
	}
    # Horde: Pacify Outsiders
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_horde_member = yes
            horde_decision_trigger_4 = yes
        }
        
        horde_decision_effect_4 = yes
        
        log = "[Root.GetName] - Horde Panel: Pacify Outsiders"
        
        ai_chance = {
            factor = 100
        }
	}
    # Horde: Inspire Loyalty
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_horde_member = yes
            horde_decision_trigger_5 = yes
        }
        
        horde_decision_effect_5 = yes
        
        log = "[Root.GetName] - Horde Panel: Inspire Loyalty"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Trade Coalition: Sign Favourable Loan
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_trade_coalition_member = yes
            trade_coalition_decision_trigger_1 = yes
        }
        
        trade_coalition_decision_effect_1 = yes
        
        log = "[Root.GetName] - Trade Coalition Panel: Sign Favourable Loan"
        
        ai_chance = {
            factor = 100
        }
	}
    # Trade Coalition: Encourage Mercantilism
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_trade_coalition_member = yes
            trade_coalition_decision_trigger_2 = yes
        }
        
        trade_coalition_decision_effect_2 = yes
        
        log = "[Root.GetName] - Trade Coalition Panel: Encourage Mercantilism"
        
        ai_chance = {
            factor = 100
        }
	}
    # Trade Coalition: Support Local Development
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_trade_coalition_member = yes
            trade_coalition_decision_trigger_3 = yes
        }
        
        trade_coalition_decision_effect_3 = yes
        
        log = "[Root.GetName] - Trade Coalition Panel: Support Local Development"
        
        ai_chance = {
            factor = 100
        }
	}
    # Trade Coalition: Bolster Exchange
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_trade_coalition_member = yes
            trade_coalition_decision_trigger_4 = yes
        }
        
        trade_coalition_decision_effect_4 = yes
        
        log = "[Root.GetName] - Trade Coalition Panel: Bolster Exchange"
        
        ai_chance = {
            factor = 100
        }
	}
    # Trade Coalition: Establish Cartel Influence
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_trade_coalition_member = yes
            trade_coalition_decision_trigger_5 = yes
        }
        
        trade_coalition_decision_effect_5 = yes
        
        log = "[Root.GetName] - Trade Coalition Panel: Establish Cartel Influence"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # Dragon Aspects: Enforce Loyalty
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_dragon_aspects_member = yes
            dragon_aspects_decision_trigger_1 = yes
        }
        
        dragon_aspects_decision_effect_1 = yes
        
        log = "[Root.GetName] - Dragon Aspects Panel: Enforce Loyalty"
        
        ai_chance = {
            factor = 100
        }
	}
    # Dragon Aspects: Heal the Wounded
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_dragon_aspects_member = yes
            dragon_aspects_decision_trigger_2 = yes
        }
        
        dragon_aspects_decision_effect_2 = yes
        
        log = "[Root.GetName] - Dragon Aspects Panel: Heal the Wounded"
        
        ai_chance = {
            factor = 100
        }
	}
    # Dragon Aspects: Seek Wisdom
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_dragon_aspects_member = yes
            dragon_aspects_decision_trigger_3 = yes
        }
        
        dragon_aspects_decision_effect_3 = yes
        
        log = "[Root.GetName] - Dragon Aspects Panel: Seek Wisdom"
        
        ai_chance = {
            factor = 100
        }
	}
    # Dragon Aspects: Crush Insolence
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_dragon_aspects_member = yes
            dragon_aspects_decision_trigger_4 = yes
        }
        
        dragon_aspects_decision_effect_4 = yes
        
        log = "[Root.GetName] - Dragon Aspects Panel: Crush Insolence"
        
        ai_chance = {
            factor = 100
        }
	}
    # Dragon Aspects: Establish Order
	option = {
		name = wwu_ai_handler.40.option.a
        
        trigger = {
            is_dragon_aspects_member = yes
            dragon_aspects_decision_trigger_5 = yes
        }
        
        dragon_aspects_decision_effect_5 = yes
        
        log = "[Root.GetName] - Dragon Aspects Panel: Establish Order"
        
        ai_chance = {
            factor = 100
        }
	}
    
    # None
	option = {
		name = wwu_ai_handler.100.option.a
        
        log = "[Root.GetName] - Faction Panel: None"
        
        ai_chance = {
            factor = 10
        }
	}
}


#----------------------------
# Mission Switch
#----------------------------
# This emulates the Mission Tab GUI features for the AI.
country_event = {
	id = wwu_ai_handler.100
	title = wwu_ai_handler.100.title
	desc = wwu_ai_handler.100.desc
	picture = RAFAAM_eventPicture
    
    is_triggered_only = yes
    hidden = yes
    
    trigger = {
        has_unique_mission_tab = yes
    }

	mean_time_to_happen = {
		days = 1
	}
	
    # Rise of the Horde
	option = {
		name = wwu_ai_handler.100.option.a
        
        trigger = {
            has_mission_tab__rise_of_the_horde = yes
        }
        
        switch_missions_to_rise_of_the_horde_missions = yes
        
        log = "[Root.GetName] - Mission Switch: Rise of the Horde"
        
        ai_chance = {
            factor = 100
        }
	}
    # Personal
	option = {
		name = wwu_ai_handler.100.option.a
        
        switch_missions_to_personal = yes
        
        log = "[Root.GetName] - Mission Switch: Personal"
        
        ai_chance = {
            factor = 100
        }
	}
}
